(function(){var P$=Clazz.newPackage("org.jmol.popup"),I$=[[0,'org.jmol.i18n.GT','javajs.util.PT','org.jmol.viewer.JC','org.jmol.viewer.Viewer']],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz.load(I$[0][i])))),!n&&i.$load$&&Clazz.load(i,2),i)};
/*c*/var C$=Clazz.newClass(P$, "MainPopupResourceBundle", null, 'org.jmol.popup.PopupResource');

C$.$clinit$=2;

Clazz.newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['menuContents','String[][]','+structureContents']]]

Clazz.newMeth(C$, 'getMenuName$', function () {
return "popupMenu";
});

Clazz.newMeth(C$, 'c$$S$java_util_Properties', function (menuStructure, menuText) {
;C$.superclazz.c$$S$java_util_Properties.apply(this,[menuStructure, menuText]);C$.$init$.apply(this);
}, 1);

Clazz.newMeth(C$, 'buildStructure$S', function (menuStructure) {
this.addItems$SAA(C$.menuContents);
this.addItems$SAA(C$.structureContents);
if (menuStructure != null ) this.setStructure$S$org_jmol_api_Translator(menuStructure, Clazz.new_($I$(1,1)));
});

Clazz.newMeth(C$, 'Box$S', function (cmd) {
return "if (showBoundBox or showUnitcell) {" + cmd + "} else {boundbox on;" + cmd + ";boundbox off}" ;
}, 1);

Clazz.newMeth(C$, 'getWordContents$', function () {
var wasTranslating=$I$(1).setDoTranslate$Z(true);
var vdw=$I$(1).$$S("{0}% van der Waals");
var exm=$I$(1).$$S("Export {0} 3D model");
var exi=$I$(1).$$S("Export {0} image");
var rld=$I$(1).$$S("Reload {0}");
var scl=$I$(1).$$S("Scale {0}");
var ang=$I$(1).$$S("{0} \u00c5");
var pxl=$I$(1).$$S("{0} px");
var words=Clazz.array(String, -1, ["cnmrMenu", $I$(1).$$S("13C-NMR"), "hnmrMenu", $I$(1).$$S("1H-NMR"), "aboutMenu", $I$(1).$$S("About..."), "negativeCharge", $I$(1,"$$S",["Acidic Residues (-)"]), "allModelsText", $I$(1).$$S("All {0} models"), "allHetero", $I$(1).$$S("All PDB \"HETATM\""), "Solvent", $I$(1).$$S("All Solvent"), "Water", $I$(1).$$S("All Water"), "selectAll", $I$(1).$$S("All"), "allProtein", null, "allNucleic", null, "allCarbo", null, "altloc#PDB", $I$(1).$$S("Alternative Location"), "amino#PDB", $I$(1).$$S("Amino Acid"), "byAngstromMenu", $I$(1).$$S("Angstrom Width"), "animModeMenu", $I$(1).$$S("Animation Mode"), "FRAMESanimateMenu", $I$(1).$$S("Animation"), "atPairs", $I$(1).$$S("AT pairs"), "atomMenu", $I$(1).$$S("Atoms"), "[color_atoms]Menu", null, "atomsText", $I$(1).$$S("atoms: {0}"), "auPairs", $I$(1).$$S("AU pairs"), "[color_axes]Menu", $I$(1).$$S("Axes"), "showAxesCB", null, "[set_axes]Menu", null, "axisA", $I$(1).$$S("Axis a"), "axisB", $I$(1).$$S("Axis b"), "axisC", $I$(1).$$S("Axis c"), "axisX", $I$(1).$$S("Axis x"), "axisY", $I$(1).$$S("Axis y"), "axisZ", $I$(1).$$S("Axis z"), "back", $I$(1).$$S("Back"), "proteinBackbone", $I$(1).$$S("Backbone"), "nucleicBackbone", null, "backbone", null, "[color_backbone]Menu", null, "[color_background]Menu", $I$(1).$$S("Background"), "renderBallAndStick", $I$(1).$$S("Ball and Stick"), "nucleicBases", $I$(1).$$S("Bases"), "positiveCharge", $I$(1,"$$S",["Basic Residues (+)"]), "best", $I$(1).$$S("Best"), "biomoleculeText", $I$(1,"$$S",["biomolecule {0} ({1} atoms)"]), "biomoleculesMenuText", $I$(1).$$S("Biomolecules"), "black", $I$(1).$$S("Black"), "blue", $I$(1).$$S("Blue"), "bondMenu", $I$(1).$$S("Bonds"), "[color_bonds]Menu", null, "bondsText", $I$(1).$$S("bonds: {0}"), "bottom", $I$(1).$$S("Bottom"), "[color_boundbox]Menu", $I$(1).$$S("Boundbox"), "[set_boundbox]Menu", null, "showBoundBoxCB", null, "PDBheteroComputedMenu", $I$(1).$$S("By HETATM"), "PDBaaResiduesComputedMenu", $I$(1).$$S("By Residue Name"), "PDBnucleicResiduesComputedMenu", null, "PDBcarboResiduesComputedMenu", null, "schemeMenu", $I$(1).$$S("By Scheme"), "[color_]schemeMenu", null, "hbondCalc", $I$(1).$$S("Calculate"), "SIGNEDJAVAcaptureRock", $I$(1).$$S("Capture rock"), "SIGNEDJAVAcaptureSpin", $I$(1).$$S("Capture spin"), "SIGNEDJAVAcaptureMenuSPECIAL", $I$(1).$$S("Capture"), "PDBcarboMenu", $I$(1).$$S("Carbohydrate"), "cartoonRockets", $I$(1).$$S("Cartoon Rockets"), "PDBrenderCartoonsOnly", $I$(1).$$S("Cartoon"), "cartoon", null, "[color_cartoon]sMenu", null, "pickCenter", $I$(1).$$S("Center"), "labelCentered", $I$(1).$$S("Centered"), "chain#PDB", $I$(1).$$S("Chain"), "chainsText", $I$(1).$$S("chains: {0}"), "colorChargeMenu", $I$(1).$$S("Charge"), "measureAngle", $I$(1).$$S("Click for angle measurement"), "measureDistance", $I$(1).$$S("Click for distance measurement"), "measureTorsion", $I$(1,"$$S",["Click for torsion (dihedral) measurement"]), "PDBmeasureSequence", $I$(1).$$S("Click two atoms to display a sequence in the console"), "modelSetCollectionText", $I$(1).$$S("Collection of {0} models"), "colorMenu", $I$(1).$$S("Color"), "computationMenu", $I$(1).$$S("Computation"), "configurationMenuText", $I$(1,"$$S",["Configurations ({0})"]), "configurationComputedMenu", $I$(1).$$S("Configurations"), "showConsole", $I$(1).$$S("Console"), "renderCpkSpacefill", $I$(1).$$S("CPK Spacefill"), "stereoCrossEyed", $I$(1).$$S("Cross-eyed viewing"), "showState", $I$(1).$$S("Current state"), "cyan", $I$(1).$$S("Cyan"), "darkgray", $I$(1).$$S("Dark Gray"), "measureDelete", $I$(1).$$S("Delete measurements"), "SIGNEDJAVAcaptureOff", $I$(1).$$S("Disable capturing"), "hideNotSelectedCB", $I$(1).$$S("Display Selected Only"), "distanceAngstroms", $I$(1).$$S("Distance units Angstroms"), "distanceNanometers", $I$(1).$$S("Distance units nanometers"), "distancePicometers", $I$(1).$$S("Distance units picometers"), "distanceHz", $I$(1,"$$S",["Distance units hz (NMR J-coupling)"]), "ssbondMenu", $I$(1).$$S("Disulfide Bonds"), "[color_ssbonds]Menu", null, "DNA", $I$(1).$$S("DNA"), "surfDots", $I$(1).$$S("Dot Surface"), "dotted", $I$(1).$$S("Dotted"), "measureOff", $I$(1).$$S("Double-Click begins and ends all measurements"), "cpk", $I$(1,"$$S",["Element (CPK)"]), "elementsComputedMenu", $I$(1).$$S("Element"), "SIGNEDJAVAcaptureEnd", $I$(1).$$S("End capturing"), "exportMenu", $I$(1).$$S("Export"), "extractMOL", $I$(1).$$S("Extract MOL data"), "showFile", $I$(1).$$S("File Contents"), "showFileHeader", $I$(1).$$S("File Header"), "fileMenu", $I$(1).$$S("File"), "formalcharge", $I$(1).$$S("Formal Charge"), "front", $I$(1).$$S("Front"), "gcPairs", $I$(1).$$S("GC pairs"), "gold", $I$(1).$$S("Gold"), "gray", $I$(1).$$S("Gray"), "green", $I$(1).$$S("Green"), "group#PDB", $I$(1).$$S("Group"), "groupsText", $I$(1).$$S("groups: {0}"), "PDBheteroMenu", $I$(1).$$S("Hetero"), "off#axes", $I$(1).$$S("Hide"), "showHistory", $I$(1).$$S("History"), "hbondMenu", $I$(1).$$S("Hydrogen Bonds"), "[color_hbonds]Menu", null, "pickIdent", $I$(1).$$S("Identity"), "indigo", $I$(1).$$S("Indigo"), "none", $I$(1).$$S("Inherit"), "invertSelection", $I$(1).$$S("Invert Selection"), "showIsosurface", $I$(1).$$S("Isosurface JVXL data"), "help", $I$(1).$$S("Jmol Script Commands"), "pickLabel", $I$(1).$$S("Label"), "labelMenu", $I$(1).$$S("Labels"), "[color_labels]Menu", null, "languageComputedMenu", $I$(1).$$S("Language"), "left", $I$(1).$$S("Left"), "Ligand", $I$(1).$$S("Ligand"), "lightgray", $I$(1).$$S("Light Gray"), "measureList", $I$(1).$$S("List measurements"), "loadBiomoleculeText", $I$(1,"$$S",["load biomolecule {0} ({1} atoms)"]), "SIGNEDloadFileUnitCell", $I$(1).$$S("Load full unit cell"), "loadMenu", $I$(1).$$S("Load"), "loop", $I$(1).$$S("Loop"), "labelLowerLeft", $I$(1).$$S("Lower Left"), "labelLowerRight", $I$(1).$$S("Lower Right"), "mainMenuText", $I$(1).$$S("Main Menu"), "opaque", $I$(1).$$S("Make Opaque"), "surfOpaque", null, "translucent", $I$(1).$$S("Make Translucent"), "surfTranslucent", null, "maroon", $I$(1).$$S("Maroon"), "measureMenu", $I$(1).$$S("Measurements"), "showMeasure", null, "modelMenuText", $I$(1).$$S("model {0}"), "hiddenModelSetText", $I$(1).$$S("Model information"), "modelkit", $I$(1).$$S("Model kit"), "showModel", $I$(1).$$S("Model"), "FRAMESbyModelComputedMenu", $I$(1).$$S("Model/Frame"), "modelKitMode", $I$(1).$$S("modelKitMode"), "surf2MEP", $I$(1,"$$S",["Molecular Electrostatic Potential (range -0.1 0.1)"]), "surfMEP", $I$(1,"$$S",["Molecular Electrostatic Potential (range ALL)"]), "showMo", $I$(1).$$S("Molecular orbital JVXL data"), "surfMoComputedMenuText", $I$(1,"$$S",["Molecular Orbitals ({0})"]), "surfMolecular", $I$(1).$$S("Molecular Surface"), "molecule", $I$(1).$$S("Molecule"), "monomer#PDB", $I$(1).$$S("Monomer"), "mouse", $I$(1).$$S("Mouse Manual"), "nextframe", $I$(1).$$S("Next Frame"), "modelSetMenu", $I$(1).$$S("No atoms loaded"), "exceptWater", $I$(1).$$S("Nonaqueous HETATM") + " (hetero and not water)", "nonWaterSolvent", $I$(1).$$S("Nonaqueous Solvent") + " (solvent and not water)", "PDBnoneOfTheAbove", $I$(1).$$S("None of the above"), "selectNone", $I$(1).$$S("None"), "stereoNone", null, "labelNone", null, "nonpolar", $I$(1).$$S("Nonpolar Residues"), "PDBnucleicMenu", $I$(1).$$S("Nucleic"), "atomNone", $I$(1).$$S("Off"), "bondNone", null, "hbondNone", null, "ssbondNone", null, "structureNone", null, "vibrationOff", null, "vectorOff", null, "spinOff", null, "pickOff", null, "surfOff", null, "olive", $I$(1).$$S("Olive"), "bondWireframe", $I$(1).$$S("On"), "hbondWireframe", null, "ssbondWireframe", null, "vibrationOn", null, "vectorOn", null, "spinOn", null, "on", null, "SIGNEDloadPdb", $I$(1).$$S("Open from PDB"), "SIGNEDloadFile", $I$(1).$$S("Open local file"), "SIGNEDloadScript", $I$(1).$$S("Open script"), "SIGNEDloadUrl", $I$(1).$$S("Open URL"), "minimize", $I$(1).$$S("Optimize structure"), "orange", $I$(1).$$S("Orange"), "orchid", $I$(1).$$S("Orchid"), "showOrient", $I$(1).$$S("Orientation"), "palindrome", $I$(1).$$S("Palindrome"), "partialcharge", $I$(1).$$S("Partial Charge"), "pause", $I$(1).$$S("Pause"), "perspectiveDepthCB", $I$(1).$$S("Perspective Depth"), "byPixelMenu", $I$(1).$$S("Pixel Width"), "onceThrough", $I$(1).$$S("Play Once"), "play", $I$(1).$$S("Play"), "polar", $I$(1).$$S("Polar Residues"), "polymersText", $I$(1).$$S("polymers: {0}"), "labelPositionMenu", $I$(1).$$S("Position Label on Atom"), "prevframe", $I$(1).$$S("Previous Frame"), "PDBproteinMenu", $I$(1).$$S("Protein"), "colorrasmolCB", $I$(1).$$S("RasMol Colors"), "red", $I$(1).$$S("Red"), "stereoRedBlue", $I$(1).$$S("Red+Blue glasses"), "stereoRedCyan", $I$(1).$$S("Red+Cyan glasses"), "stereoRedGreen", $I$(1).$$S("Red+Green glasses"), "SIGNEDJAVAcaptureOn", $I$(1).$$S("Re-enable capturing"), "FILEUNITninePoly", $I$(1).$$S("Reload + Polyhedra"), "reload", $I$(1).$$S("Reload"), "restart", $I$(1).$$S("Restart"), "resume", $I$(1).$$S("Resume"), "playrev", $I$(1).$$S("Reverse"), "rewind", $I$(1).$$S("Rewind"), "ribbons", $I$(1).$$S("Ribbons"), "[color_ribbon]sMenu", null, "right", $I$(1).$$S("Right"), "RNA", $I$(1).$$S("RNA"), "rockets", $I$(1).$$S("Rockets"), "[color_rockets]Menu", null, "salmon", $I$(1).$$S("Salmon"), "writeFileTextVARIABLE", $I$(1).$$S("Save a copy of {0}"), "SIGNEDwriteJmol", $I$(1,"$$S",["Save as PNG/JMOL (image+zip)"]), "SIGNEDwriteIsosurface", $I$(1).$$S("Save JVXL isosurface"), "writeHistory", $I$(1).$$S("Save script with history"), "writeState", $I$(1).$$S("Save script with state"), "saveMenu", $I$(1).$$S("Save"), "sceneComputedMenu", $I$(1).$$S("Scenes"), "renderSchemeMenu", $I$(1).$$S("Scheme"), "aaStructureMenu", $I$(1).$$S("Secondary Structure"), "structure#PDB", null, "selectMenuText", $I$(1,"$$S",["Select ({0})"]), "pickAtom", $I$(1).$$S("Select atom"), "PDBpickChain", $I$(1).$$S("Select chain"), "pickElement", $I$(1).$$S("Select element"), "PDBpickGroup", $I$(1).$$S("Select group"), "pickMolecule", $I$(1).$$S("Select molecule"), "SYMMETRYpickSite", $I$(1).$$S("Select site"), "showSelectionsCB", $I$(1).$$S("Selection Halos"), "SIGNEDJAVAcaptureFpsSPECIAL", $I$(1).$$S("Set capture replay rate"), "[set_spin_FPS]Menu", $I$(1).$$S("Set FPS"), "FRAMESanimFpsMenu", null, "PDBhbondBackbone", $I$(1).$$S("Set H-Bonds Backbone"), "PDBhbondSidechain", $I$(1).$$S("Set H-Bonds Side Chain"), "pickingMenu", $I$(1).$$S("Set picking"), "PDBssbondBackbone", $I$(1).$$S("Set SS-Bonds Backbone"), "PDBssbondSidechain", $I$(1).$$S("Set SS-Bonds Side Chain"), "[set_spin_X]Menu", $I$(1).$$S("Set X Rate"), "[set_spin_Y]Menu", $I$(1).$$S("Set Y Rate"), "[set_spin_Z]Menu", $I$(1).$$S("Set Z Rate"), "shapely#PDB", $I$(1).$$S("Shapely"), "showHydrogensCB", $I$(1).$$S("Show Hydrogens"), "showMeasurementsCB", $I$(1).$$S("Show Measurements"), "SYMMETRYpickSymmetry", $I$(1).$$S("Show symmetry operation"), "showMenu", $I$(1).$$S("Show"), "proteinSideChains", $I$(1).$$S("Side Chains"), "slateblue", $I$(1).$$S("Slate Blue"), "SYMMETRYShowComputedMenu", $I$(1).$$S("Space Group"), "showSpacegroup", null, "spectraMenu", $I$(1).$$S("Spectra"), "spinMenu", $I$(1).$$S("Spin"), "pickSpin", null, "SIGNEDJAVAcaptureBegin", $I$(1).$$S("Start capturing"), "stereoMenu", $I$(1).$$S("Stereographic"), "renderSticks", $I$(1).$$S("Sticks"), "stop", $I$(1).$$S("Stop"), "strands", $I$(1).$$S("Strands"), "[color_strands]Menu", null, "PDBstructureMenu", $I$(1).$$S("Structures"), "colorPDBStructuresMenu", null, "renderMenu", $I$(1).$$S("Style"), "[color_isosurface]Menu", $I$(1).$$S("Surfaces"), "surfaceMenu", null, "SYMMETRYSelectComputedMenu", $I$(1).$$S("Symmetry"), "SYMMETRYshowSymmetry", null, "FILEUNITMenu", null, "systemMenu", $I$(1).$$S("System"), "relativeTemperature#BFACTORS", $I$(1,"$$S",["Temperature (Relative)"]), "fixedTemperature#BFACTORS", $I$(1,"$$S",["Temperature (Fixed)"]), "SIGNEDJAVAcaptureLoopingSPECIAL", $I$(1).$$S("Toggle capture looping"), "top", $I$(2,"split$S$S",[$I$(1,"$$S",["Top[as in \"view from the top, from above\" - (translators: remove this bracketed part]"]), "["])[0], "PDBrenderTraceOnly", $I$(1).$$S("Trace"), "trace", null, "[color_trace]Menu", null, "translations", $I$(1).$$S("Translations"), "noCharge", $I$(1).$$S("Uncharged Residues"), "[color_UNITCELL]Menu", $I$(1).$$S("Unit cell"), "UNITCELLshow", null, "[set_UNITCELL]Menu", null, "showUNITCELLCB", null, "labelUpperLeft", $I$(1).$$S("Upper Left"), "labelUpperRight", $I$(1).$$S("Upper Right"), "surfVDW", $I$(1).$$S("van der Waals Surface"), "VIBRATIONvectorMenu", $I$(1).$$S("Vectors"), "property_vxyz#VIBRATION", null, "[color_vectors]Menu", null, "VIBRATIONMenu", $I$(1).$$S("Vibration"), "viewMenuText", $I$(1).$$S("View {0}"), "viewMenu", $I$(1).$$S("View"), "violet", $I$(1).$$S("Violet"), "stereoWallEyed", $I$(1).$$S("Wall-eyed viewing"), "white", $I$(1).$$S("White"), "renderWireframe", $I$(1).$$S("Wireframe"), "labelName", $I$(1).$$S("With Atom Name"), "labelNumber", $I$(1).$$S("With Atom Number"), "labelSymbol", $I$(1).$$S("With Element Symbol"), "yellow", $I$(1).$$S("Yellow"), "zoomIn", $I$(1).$$S("Zoom In"), "zoomOut", $I$(1).$$S("Zoom Out"), "zoomMenu", $I$(1).$$S("Zoom"), "vector005", $I$(1).o$S$O(ang, "0.05"), "bond100", $I$(1).o$S$O(ang, "0.10"), "hbond100", null, "ssbond100", null, "vector01", null, "10a", null, "bond150", $I$(1).o$S$O(ang, "0.15"), "hbond150", null, "ssbond150", null, "bond200", $I$(1).o$S$O(ang, "0.20"), "hbond200", null, "ssbond200", null, "20a", null, "bond250", $I$(1).o$S$O(ang, "0.25"), "hbond250", null, "ssbond250", null, "25a", null, "bond300", $I$(1).o$S$O(ang, "0.30"), "hbond300", null, "ssbond300", null, "50a", $I$(1).o$S$O(ang, "0.50"), "100a", $I$(1).o$S$O(ang, "1.0"), "1p", $I$(1).i$S$I(pxl, 1), "10p", $I$(1).i$S$I(pxl, 10), "3p", $I$(1).i$S$I(pxl, 3), "vector3", null, "5p", $I$(1).i$S$I(pxl, 5), "atom100", $I$(1).i$S$I(vdw, 100), "atom15", $I$(1).i$S$I(vdw, 15), "atom20", $I$(1).i$S$I(vdw, 20), "atom25", $I$(1).i$S$I(vdw, 25), "atom50", $I$(1).i$S$I(vdw, 50), "atom75", $I$(1).i$S$I(vdw, 75), "SIGNEDNOGLwriteIdtf", $I$(1).o$S$O(exm, "IDTF"), "SIGNEDNOGLwriteMaya", $I$(1).o$S$O(exm, "Maya"), "SIGNEDNOGLwriteVrml", $I$(1).o$S$O(exm, "VRML"), "SIGNEDNOGLwriteX3d", $I$(1).o$S$O(exm, "X3D"), "SIGNEDNOGLwriteSTL", $I$(1).o$S$O(exm, "STL"), "SIGNEDNOGLwriteGif", $I$(1).o$S$O(exi, "GIF"), "SIGNEDNOGLwriteJpg", $I$(1).o$S$O(exi, "JPG"), "SIGNEDNOGLwritePng", $I$(1).o$S$O(exi, "PNG"), "SIGNEDNOGLwritePngJmol", $I$(1).o$S$O(exi, "PNG+JMOL"), "SIGNEDNOGLwritePovray", $I$(1).o$S$O(exi, "POV-Ray"), "FILEUNITnineRestricted", $I$(1,"o$S$O",[$I$(1).$$S("Reload {0} + Display {1}"), Clazz.array(java.lang.Object, -1, ["{444 666 1}", "555"])]), "FILEMOLload", $I$(1,"o$S$O",[rld, "(molecular)"]), "FILEUNITone", $I$(1).o$S$O(rld, "{1 1 1}"), "FILEUNITnine", $I$(1).o$S$O(rld, "{444 666 1}"), "vectorScale02", $I$(1).o$S$O(scl, "0.2"), "vectorScale05", $I$(1).o$S$O(scl, "0.5"), "vectorScale1", $I$(1).o$S$O(scl, "1"), "vectorScale2", $I$(1).o$S$O(scl, "2"), "vectorScale5", $I$(1).o$S$O(scl, "5"), "surfSolvent14", $I$(1,"o$S$O",[$I$(1,"$$S",["Solvent Surface ({0}-Angstrom probe)"]), "1.4"]), "surfSolventAccessible14", $I$(1,"o$S$O",[$I$(1,"$$S",["Solvent-Accessible Surface (VDW + {0} Angstrom)"]), "1.4"]), "vibration20", "*2", "vibration05", "/2", "JAVAmemTotal", "?", "JAVAmemMax", null, "JAVAprocessors", null, "s0", "0", "animfps10", "10", "s10", null, "zoom100", "100%", "zoom150", "150%", "animfps20", "20", "s20", null, "zoom200", "200%", "animfps30", "30", "s30", null, "s40", "40", "zoom400", "400%", "animfps5", "5", "s5", null, "animfps50", "50", "s50", null, "zoom50", "50%", "zoom800", "800%", "JSConsole", "JavaScript Console", "jmolMenu", "Jmol", "date", $I$(3).date, "version", $I$(3).version, "javaVender", $I$(4).strJavaVendor, "javaVersion", $I$(4).strJavaVersion, "os", $I$(4).strOSName, "jmolorg", "http://www.jmol.org"]);
$I$(1).setDoTranslate$Z(wasTranslating);
for (var i=1, n=words.length; i < n; i+=2) if (words[i] == null ) words[i]=words[i - 2];

return words;
});

Clazz.newMeth(C$, 'getMenuAsText$S', function (title) {
return this.getStuctureAsText$S$SAA$SAA(title, C$.menuContents, C$.structureContents);
});

C$.$static$=function(){C$.$static$=0;
C$.menuContents=Clazz.array(String, -2, [Clazz.array(String, -1, ["@COLOR", "black darkgray lightgray white - red orange yellow green cyan blue indigo violet"]), Clazz.array(String, -1, ["@AXESCOLOR", "gray salmon maroon olive slateblue gold orchid"]), Clazz.array(String, -1, ["popupMenu", "fileMenu modelSetMenu FRAMESbyModelComputedMenu configurationComputedMenu - selectMenuText viewMenu renderMenu colorMenu - surfaceMenu FILEUNITMenu - sceneComputedMenu zoomMenu spinMenu VIBRATIONMenu spectraMenu FRAMESanimateMenu - measureMenu pickingMenu - showConsole JSConsole showMenu computationMenu - languageComputedMenu aboutMenu"]), Clazz.array(String, -1, ["fileMenu", "loadMenu saveMenu exportMenu SIGNEDJAVAcaptureMenuSPECIAL "]), Clazz.array(String, -1, ["loadMenu", "SIGNEDloadFile SIGNEDloadUrl SIGNEDloadPdb SIGNEDloadScript - reload SIGNEDloadFileUnitCell"]), Clazz.array(String, -1, ["saveMenu", "writeFileTextVARIABLE writeState writeHistory SIGNEDwriteJmol SIGNEDwriteIsosurface "]), Clazz.array(String, -1, ["exportMenu", "SIGNEDNOGLwriteGif SIGNEDNOGLwriteJpg SIGNEDNOGLwritePng SIGNEDNOGLwritePngJmol SIGNEDNOGLwritePovray - SIGNEDNOGLwriteVrml SIGNEDNOGLwriteX3d SIGNEDNOGLwriteSTL"]), Clazz.array(String, -1, ["selectMenuText", "hideNotSelectedCB showSelectionsCB - selectAll selectNone invertSelection - elementsComputedMenu SYMMETRYSelectComputedMenu - PDBproteinMenu PDBnucleicMenu PDBheteroMenu PDBcarboMenu PDBnoneOfTheAbove"]), Clazz.array(String, -1, ["PDBproteinMenu", "PDBaaResiduesComputedMenu - allProtein proteinBackbone proteinSideChains - polar nonpolar - positiveCharge negativeCharge noCharge"]), Clazz.array(String, -1, ["PDBcarboMenu", "PDBcarboResiduesComputedMenu - allCarbo"]), Clazz.array(String, -1, ["PDBnucleicMenu", "PDBnucleicResiduesComputedMenu - allNucleic nucleicBackbone nucleicBases - DNA RNA - atPairs auPairs gcPairs - aaStructureMenu"]), Clazz.array(String, -1, ["PDBheteroMenu", "PDBheteroComputedMenu - allHetero Solvent Water - Ligand exceptWater nonWaterSolvent"]), Clazz.array(String, -1, ["viewMenu", "best front left right top bottom back - axisX axisY axisZ - axisA axisB axisC"]), Clazz.array(String, -1, ["renderMenu", "renderSchemeMenu - atomMenu labelMenu bondMenu hbondMenu ssbondMenu - PDBstructureMenu - [set_axes]Menu [set_boundbox]Menu [set_UNITCELL]Menu - perspectiveDepthCB stereoMenu"]), Clazz.array(String, -1, ["renderSchemeMenu", "renderCpkSpacefill renderBallAndStick renderSticks renderWireframe PDBrenderCartoonsOnly PDBrenderTraceOnly"]), Clazz.array(String, -1, ["atomMenu", "showHydrogensCB - atomNone - atom15 atom20 atom25 atom50 atom75 atom100"]), Clazz.array(String, -1, ["bondMenu", "bondNone bondWireframe - bond100 bond150 bond200 bond250 bond300"]), Clazz.array(String, -1, ["hbondMenu", "hbondCalc hbondNone hbondWireframe - PDBhbondSidechain PDBhbondBackbone - hbond100 hbond150 hbond200 hbond250 hbond300"]), Clazz.array(String, -1, ["ssbondMenu", "ssbondNone ssbondWireframe - PDBssbondSidechain PDBssbondBackbone - ssbond100 ssbond150 ssbond200 ssbond250 ssbond300"]), Clazz.array(String, -1, ["PDBstructureMenu", "structureNone - backbone cartoon cartoonRockets ribbons rockets strands trace"]), Clazz.array(String, -1, ["VIBRATIONvectorMenu", "vectorOff vectorOn vibScale20 vibScale05 vector3 vector005 vector01 - vectorScale02 vectorScale05 vectorScale1 vectorScale2 vectorScale5"]), Clazz.array(String, -1, ["stereoMenu", "stereoNone stereoRedCyan stereoRedBlue stereoRedGreen stereoCrossEyed stereoWallEyed"]), Clazz.array(String, -1, ["labelMenu", "labelNone - labelSymbol labelName labelNumber - labelPositionMenu"]), Clazz.array(String, -1, ["labelPositionMenu", "labelCentered labelUpperRight labelLowerRight labelUpperLeft labelLowerLeft"]), Clazz.array(String, -1, ["colorMenu", "colorrasmolCB [color_]schemeMenu - [color_atoms]Menu [color_bonds]Menu [color_hbonds]Menu [color_ssbonds]Menu colorPDBStructuresMenu [color_isosurface]Menu - [color_labels]Menu [color_vectors]Menu - [color_axes]Menu [color_boundbox]Menu [color_UNITCELL]Menu [color_background]Menu"]), Clazz.array(String, -1, ["[color_atoms]Menu", "schemeMenu - @COLOR - opaque translucent"]), Clazz.array(String, -1, ["[color_bonds]Menu", "none - @COLOR - opaque translucent"]), Clazz.array(String, -1, ["[color_hbonds]Menu", null]), Clazz.array(String, -1, ["[color_ssbonds]Menu", null]), Clazz.array(String, -1, ["[color_labels]Menu", null]), Clazz.array(String, -1, ["[color_vectors]Menu", null]), Clazz.array(String, -1, ["[color_backbone]Menu", "none - schemeMenu - @COLOR - opaque translucent"]), Clazz.array(String, -1, ["[color_cartoon]sMenu", null]), Clazz.array(String, -1, ["[color_ribbon]sMenu", null]), Clazz.array(String, -1, ["[color_rockets]Menu", null]), Clazz.array(String, -1, ["[color_strands]Menu", null]), Clazz.array(String, -1, ["[color_trace]Menu", null]), Clazz.array(String, -1, ["[color_background]Menu", "@COLOR"]), Clazz.array(String, -1, ["[color_isosurface]Menu", "@COLOR - opaque translucent"]), Clazz.array(String, -1, ["[color_axes]Menu", "@AXESCOLOR"]), Clazz.array(String, -1, ["[color_boundbox]Menu", null]), Clazz.array(String, -1, ["[color_UNITCELL]Menu", null]), Clazz.array(String, -1, ["colorPDBStructuresMenu", "[color_backbone]Menu [color_cartoon]sMenu [color_ribbon]sMenu [color_rockets]Menu [color_strands]Menu [color_trace]Menu"]), Clazz.array(String, -1, ["schemeMenu", "cpk molecule formalcharge partialcharge - altloc#PDB amino#PDB chain#PDB group#PDB monomer#PDB shapely#PDB structure#PDB relativeTemperature#BFACTORS fixedTemperature#BFACTORS property_vxyz#VIBRATION"]), Clazz.array(String, -1, ["[color_]schemeMenu", null]), Clazz.array(String, -1, ["zoomMenu", "zoom50 zoom100 zoom150 zoom200 zoom400 zoom800 - zoomIn zoomOut"]), Clazz.array(String, -1, ["spinMenu", "spinOn spinOff - [set_spin_X]Menu [set_spin_Y]Menu [set_spin_Z]Menu - [set_spin_FPS]Menu"]), Clazz.array(String, -1, ["VIBRATIONMenu", "vibrationOff vibrationOn vibration20 vibration05 VIBRATIONvectorMenu"]), Clazz.array(String, -1, ["spectraMenu", "hnmrMenu cnmrMenu"]), Clazz.array(String, -1, ["FRAMESanimateMenu", "animModeMenu - play pause resume stop - nextframe prevframe rewind - playrev restart - FRAMESanimFpsMenu"]), Clazz.array(String, -1, ["FRAMESanimFpsMenu", "animfps5 animfps10 animfps20 animfps30 animfps50"]), Clazz.array(String, -1, ["measureMenu", "showMeasurementsCB - measureOff measureDistance measureAngle measureTorsion PDBmeasureSequence - measureDelete measureList - distanceNanometers distanceAngstroms distancePicometers distanceHz"]), Clazz.array(String, -1, ["pickingMenu", "pickOff pickCenter pickIdent pickLabel pickAtom pickMolecule pickElement - pickSpin - modelKitMode - PDBpickChain PDBpickGroup SYMMETRYpickSite"]), Clazz.array(String, -1, ["computationMenu", "minimize modelkit"]), Clazz.array(String, -1, ["showMenu", "showHistory showFile showFileHeader - showOrient showMeasure - showSpacegroup showState SYMMETRYshowSymmetry UNITCELLshow - showIsosurface showMo - extractMOL"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureMenuSPECIAL", "SIGNEDJAVAcaptureRock SIGNEDJAVAcaptureSpin - SIGNEDJAVAcaptureBegin SIGNEDJAVAcaptureEnd SIGNEDJAVAcaptureOff SIGNEDJAVAcaptureOn SIGNEDJAVAcaptureFpsSPECIAL SIGNEDJAVAcaptureLoopingSPECIAL"]), Clazz.array(String, -1, ["[set_spin_X]Menu", "s0 s5 s10 s20 s30 s40 s50"]), Clazz.array(String, -1, ["[set_spin_Y]Menu", null]), Clazz.array(String, -1, ["[set_spin_Z]Menu", null]), Clazz.array(String, -1, ["[set_spin_FPS]Menu", null]), Clazz.array(String, -1, ["animModeMenu", "onceThrough palindrome loop"]), Clazz.array(String, -1, ["surfaceMenu", "surfDots surfVDW surfSolventAccessible14 surfSolvent14 surfMolecular surf2MEP surfMEP surfMoComputedMenuText - surfOpaque surfTranslucent surfOff"]), Clazz.array(String, -1, ["FILEUNITMenu", "SYMMETRYShowComputedMenu FILEMOLload FILEUNITone FILEUNITnine FILEUNITnineRestricted FILEUNITninePoly"]), Clazz.array(String, -1, ["[set_axes]Menu", "on off#axes dotted - byPixelMenu byAngstromMenu"]), Clazz.array(String, -1, ["[set_boundbox]Menu", null]), Clazz.array(String, -1, ["[set_UNITCELL]Menu", null]), Clazz.array(String, -1, ["byPixelMenu", "1p 3p 5p 10p"]), Clazz.array(String, -1, ["byAngstromMenu", "10a 20a 25a 50a 100a"]), Clazz.array(String, -1, ["aboutMenu", "jmolMenu systemMenu"]), Clazz.array(String, -1, ["jmolMenu", "APPLETid version date - help - mouse translations jmolorg"]), Clazz.array(String, -1, ["systemMenu", "os javaVender javaVersion JAVAprocessors JAVAmemMax JAVAmemTotal"])]);
C$.structureContents=Clazz.array(String, -2, [Clazz.array(String, -1, ["jmolorg", "show url \"http://www.jmol.org\""]), Clazz.array(String, -1, ["help", "help"]), Clazz.array(String, -1, ["mouse", "show url \"http://wiki.jmol.org/index.php/Mouse_Manual\""]), Clazz.array(String, -1, ["translations", "show url \"http://wiki.jmol.org/index.php/Internationalisation\""]), Clazz.array(String, -1, ["colorrasmolCB", ""]), Clazz.array(String, -1, ["hideNotSelectedCB", "set hideNotSelected true | set hideNotSelected false; hide(none)"]), Clazz.array(String, -1, ["perspectiveDepthCB", ""]), Clazz.array(String, -1, ["showAxesCB", "set showAxes true | set showAxes false;set axesMolecular"]), Clazz.array(String, -1, ["showBoundBoxCB", ""]), Clazz.array(String, -1, ["showHydrogensCB", ""]), Clazz.array(String, -1, ["showMeasurementsCB", ""]), Clazz.array(String, -1, ["showSelectionsCB", ""]), Clazz.array(String, -1, ["showUNITCELLCB", ""]), Clazz.array(String, -1, ["selectAll", "SELECT all"]), Clazz.array(String, -1, ["selectNone", "SELECT none"]), Clazz.array(String, -1, ["invertSelection", "SELECT not selected"]), Clazz.array(String, -1, ["allProtein", "SELECT protein"]), Clazz.array(String, -1, ["proteinBackbone", "SELECT protein and backbone"]), Clazz.array(String, -1, ["proteinSideChains", "SELECT protein and not backbone"]), Clazz.array(String, -1, ["polar", "SELECT protein and polar"]), Clazz.array(String, -1, ["nonpolar", "SELECT protein and not polar"]), Clazz.array(String, -1, ["positiveCharge", "SELECT protein and basic"]), Clazz.array(String, -1, ["negativeCharge", "SELECT protein and acidic"]), Clazz.array(String, -1, ["noCharge", "SELECT protein and not (acidic,basic)"]), Clazz.array(String, -1, ["allCarbo", "SELECT carbohydrate"]), Clazz.array(String, -1, ["allNucleic", "SELECT nucleic"]), Clazz.array(String, -1, ["DNA", "SELECT dna"]), Clazz.array(String, -1, ["RNA", "SELECT rna"]), Clazz.array(String, -1, ["nucleicBackbone", "SELECT nucleic and backbone"]), Clazz.array(String, -1, ["nucleicBases", "SELECT nucleic and not backbone"]), Clazz.array(String, -1, ["atPairs", "SELECT a,t"]), Clazz.array(String, -1, ["gcPairs", "SELECT g,c"]), Clazz.array(String, -1, ["auPairs", "SELECT a,u"]), Clazz.array(String, -1, ["A", "SELECT a"]), Clazz.array(String, -1, ["C", "SELECT c"]), Clazz.array(String, -1, ["G", "SELECT g"]), Clazz.array(String, -1, ["T", "SELECT t"]), Clazz.array(String, -1, ["U", "SELECT u"]), Clazz.array(String, -1, ["allHetero", "SELECT hetero"]), Clazz.array(String, -1, ["Solvent", "SELECT solvent"]), Clazz.array(String, -1, ["Water", "SELECT water"]), Clazz.array(String, -1, ["nonWaterSolvent", "SELECT solvent and not water"]), Clazz.array(String, -1, ["exceptWater", "SELECT hetero and not water"]), Clazz.array(String, -1, ["Ligand", "SELECT ligand"]), Clazz.array(String, -1, ["PDBnoneOfTheAbove", "SELECT not(hetero,protein,nucleic,carbohydrate)"]), Clazz.array(String, -1, ["best", "rotate best -1.0"]), Clazz.array(String, -1, ["front", C$.Box$S("moveto 2.0 front;delay 1")]), Clazz.array(String, -1, ["left", C$.Box$S("moveto 1.0 front;moveto 2.0 left;delay 1")]), Clazz.array(String, -1, ["right", C$.Box$S("moveto 1.0 front;moveto 2.0 right;delay 1")]), Clazz.array(String, -1, ["top", C$.Box$S("moveto 1.0 front;moveto 2.0 top;delay 1")]), Clazz.array(String, -1, ["bottom", C$.Box$S("moveto 1.0 front;moveto 2.0 bottom;delay 1")]), Clazz.array(String, -1, ["back", C$.Box$S("moveto 1.0 front;moveto 2.0 back;delay 1")]), Clazz.array(String, -1, ["axisA", "moveto axis a"]), Clazz.array(String, -1, ["axisB", "moveto axis b"]), Clazz.array(String, -1, ["axisC", "moveto axis c"]), Clazz.array(String, -1, ["axisX", "moveto axis x"]), Clazz.array(String, -1, ["axisY", "moveto axis y"]), Clazz.array(String, -1, ["axisZ", "moveto axis z"]), Clazz.array(String, -1, ["renderCpkSpacefill", "restrict bonds not selected;select not selected;spacefill 100%;color cpk"]), Clazz.array(String, -1, ["renderBallAndStick", "restrict bonds not selected;select not selected;spacefill 23%AUTO;wireframe 0.15;color cpk"]), Clazz.array(String, -1, ["renderSticks", "restrict bonds not selected;select not selected;wireframe 0.3;color cpk"]), Clazz.array(String, -1, ["renderWireframe", "restrict bonds not selected;select not selected;wireframe on;color cpk"]), Clazz.array(String, -1, ["PDBrenderCartoonsOnly", "restrict bonds not selected;select not selected;cartoons on;color structure"]), Clazz.array(String, -1, ["PDBrenderTraceOnly", "restrict bonds not selected;select not selected;trace on;color structure"]), Clazz.array(String, -1, ["atomNone", "cpk off"]), Clazz.array(String, -1, ["atom15", "cpk 15%"]), Clazz.array(String, -1, ["atom20", "cpk 20%"]), Clazz.array(String, -1, ["atom25", "cpk 25%"]), Clazz.array(String, -1, ["atom50", "cpk 50%"]), Clazz.array(String, -1, ["atom75", "cpk 75%"]), Clazz.array(String, -1, ["atom100", "cpk on"]), Clazz.array(String, -1, ["bondNone", "wireframe off"]), Clazz.array(String, -1, ["bondWireframe", "wireframe on"]), Clazz.array(String, -1, ["bond100", "wireframe .1"]), Clazz.array(String, -1, ["bond150", "wireframe .15"]), Clazz.array(String, -1, ["bond200", "wireframe .2"]), Clazz.array(String, -1, ["bond250", "wireframe .25"]), Clazz.array(String, -1, ["bond300", "wireframe .3"]), Clazz.array(String, -1, ["hbondCalc", "hbonds calculate"]), Clazz.array(String, -1, ["hbondNone", "hbonds off"]), Clazz.array(String, -1, ["hbondWireframe", "hbonds on"]), Clazz.array(String, -1, ["PDBhbondSidechain", "set hbonds sidechain"]), Clazz.array(String, -1, ["PDBhbondBackbone", "set hbonds backbone"]), Clazz.array(String, -1, ["hbond100", "hbonds .1"]), Clazz.array(String, -1, ["hbond150", "hbonds .15"]), Clazz.array(String, -1, ["hbond200", "hbonds .2"]), Clazz.array(String, -1, ["hbond250", "hbonds .25"]), Clazz.array(String, -1, ["hbond300", "hbonds .3"]), Clazz.array(String, -1, ["ssbondNone", "ssbonds off"]), Clazz.array(String, -1, ["ssbondWireframe", "ssbonds on"]), Clazz.array(String, -1, ["PDBssbondSidechain", "set ssbonds sidechain"]), Clazz.array(String, -1, ["PDBssbondBackbone", "set ssbonds backbone"]), Clazz.array(String, -1, ["ssbond100", "ssbonds .1"]), Clazz.array(String, -1, ["ssbond150", "ssbonds .15"]), Clazz.array(String, -1, ["ssbond200", "ssbonds .2"]), Clazz.array(String, -1, ["ssbond250", "ssbonds .25"]), Clazz.array(String, -1, ["ssbond300", "ssbonds .3"]), Clazz.array(String, -1, ["structureNone", "backbone off;cartoons off;ribbons off;rockets off;strands off;trace off;"]), Clazz.array(String, -1, ["backbone", "restrict not selected;select not selected;backbone 0.3"]), Clazz.array(String, -1, ["cartoon", "restrict not selected;select not selected;set cartoonRockets false;cartoons on"]), Clazz.array(String, -1, ["cartoonRockets", "restrict not selected;select not selected;set cartoonRockets;cartoons on"]), Clazz.array(String, -1, ["ribbons", "restrict not selected;select not selected;ribbons on"]), Clazz.array(String, -1, ["rockets", "restrict not selected;select not selected;rockets on"]), Clazz.array(String, -1, ["strands", "restrict not selected;select not selected;strands on"]), Clazz.array(String, -1, ["trace", "restrict not selected;select not selected;trace 0.3"]), Clazz.array(String, -1, ["vibrationOff", "vibration off"]), Clazz.array(String, -1, ["vibrationOn", "vibration on"]), Clazz.array(String, -1, ["vibration20", "vibrationScale *= 2"]), Clazz.array(String, -1, ["vibration05", "vibrationScale /= 2"]), Clazz.array(String, -1, ["vectorOff", "vectors off"]), Clazz.array(String, -1, ["vectorOn", "vectors on"]), Clazz.array(String, -1, ["vector3", "vectors 3"]), Clazz.array(String, -1, ["vector005", "vectors 0.05"]), Clazz.array(String, -1, ["vector01", "vectors 0.1"]), Clazz.array(String, -1, ["vectorScale02", "vector scale 0.2"]), Clazz.array(String, -1, ["vectorScale05", "vector scale 0.5"]), Clazz.array(String, -1, ["vectorScale1", "vector scale 1"]), Clazz.array(String, -1, ["vectorScale2", "vector scale 2"]), Clazz.array(String, -1, ["vectorScale5", "vector scale 5"]), Clazz.array(String, -1, ["stereoNone", "stereo off"]), Clazz.array(String, -1, ["stereoRedCyan", "stereo redcyan 3"]), Clazz.array(String, -1, ["stereoRedBlue", "stereo redblue 3"]), Clazz.array(String, -1, ["stereoRedGreen", "stereo redgreen 3"]), Clazz.array(String, -1, ["stereoCrossEyed", "stereo -5"]), Clazz.array(String, -1, ["stereoWallEyed", "stereo 5"]), Clazz.array(String, -1, ["labelNone", "label off"]), Clazz.array(String, -1, ["labelSymbol", "label %e"]), Clazz.array(String, -1, ["labelName", "label %a"]), Clazz.array(String, -1, ["labelNumber", "label %i"]), Clazz.array(String, -1, ["labelCentered", "set labeloffset 0 0"]), Clazz.array(String, -1, ["labelUpperRight", "set labeloffset 4 4"]), Clazz.array(String, -1, ["labelLowerRight", "set labeloffset 4 -4"]), Clazz.array(String, -1, ["labelUpperLeft", "set labeloffset -4 4"]), Clazz.array(String, -1, ["labelLowerLeft", "set labeloffset -4 -4"]), Clazz.array(String, -1, ["zoom50", "zoom 50"]), Clazz.array(String, -1, ["zoom100", "zoom 100"]), Clazz.array(String, -1, ["zoom150", "zoom 150"]), Clazz.array(String, -1, ["zoom200", "zoom 200"]), Clazz.array(String, -1, ["zoom400", "zoom 400"]), Clazz.array(String, -1, ["zoom800", "zoom 800"]), Clazz.array(String, -1, ["zoomIn", "move 0 0 0 40 0 0 0 0 1"]), Clazz.array(String, -1, ["zoomOut", "move 0 0 0 -40 0 0 0 0 1"]), Clazz.array(String, -1, ["spinOn", "spin on"]), Clazz.array(String, -1, ["spinOff", "spin off"]), Clazz.array(String, -1, ["s0", "0"]), Clazz.array(String, -1, ["s5", "5"]), Clazz.array(String, -1, ["s10", "10"]), Clazz.array(String, -1, ["s20", "20"]), Clazz.array(String, -1, ["s30", "30"]), Clazz.array(String, -1, ["s40", "40"]), Clazz.array(String, -1, ["s50", "50"]), Clazz.array(String, -1, ["onceThrough", "anim mode once#"]), Clazz.array(String, -1, ["palindrome", "anim mode palindrome#"]), Clazz.array(String, -1, ["loop", "anim mode loop#"]), Clazz.array(String, -1, ["play", "anim play#"]), Clazz.array(String, -1, ["pause", "anim pause#"]), Clazz.array(String, -1, ["resume", "anim resume#"]), Clazz.array(String, -1, ["stop", "anim off#"]), Clazz.array(String, -1, ["nextframe", "frame next#"]), Clazz.array(String, -1, ["prevframe", "frame prev#"]), Clazz.array(String, -1, ["playrev", "anim playrev#"]), Clazz.array(String, -1, ["rewind", "anim rewind#"]), Clazz.array(String, -1, ["restart", "anim on#"]), Clazz.array(String, -1, ["animfps5", "anim fps 5#"]), Clazz.array(String, -1, ["animfps10", "anim fps 10#"]), Clazz.array(String, -1, ["animfps20", "anim fps 20#"]), Clazz.array(String, -1, ["animfps30", "anim fps 30#"]), Clazz.array(String, -1, ["animfps50", "anim fps 50#"]), Clazz.array(String, -1, ["measureOff", "set pickingstyle MEASURE OFF; set picking OFF"]), Clazz.array(String, -1, ["measureDistance", "set pickingstyle MEASURE; set picking MEASURE DISTANCE"]), Clazz.array(String, -1, ["measureAngle", "set pickingstyle MEASURE; set picking MEASURE ANGLE"]), Clazz.array(String, -1, ["measureTorsion", "set pickingstyle MEASURE; set picking MEASURE TORSION"]), Clazz.array(String, -1, ["PDBmeasureSequence", "set pickingstyle MEASURE; set picking MEASURE SEQUENCE"]), Clazz.array(String, -1, ["measureDelete", "measure delete"]), Clazz.array(String, -1, ["measureList", "console on;show measurements"]), Clazz.array(String, -1, ["distanceNanometers", "select *; set measure nanometers"]), Clazz.array(String, -1, ["distanceAngstroms", "select *; set measure angstroms"]), Clazz.array(String, -1, ["distancePicometers", "select *; set measure picometers"]), Clazz.array(String, -1, ["distanceHz", "select *; set measure hz"]), Clazz.array(String, -1, ["pickOff", "set picking off"]), Clazz.array(String, -1, ["pickCenter", "set picking center"]), Clazz.array(String, -1, ["pickIdent", "set picking ident"]), Clazz.array(String, -1, ["pickLabel", "set picking label"]), Clazz.array(String, -1, ["pickAtom", "set picking atom"]), Clazz.array(String, -1, ["PDBpickChain", "set picking chain"]), Clazz.array(String, -1, ["pickElement", "set picking element"]), Clazz.array(String, -1, ["modelKitMode", "set modelKitMode"]), Clazz.array(String, -1, ["PDBpickGroup", "set picking group"]), Clazz.array(String, -1, ["pickMolecule", "set picking molecule"]), Clazz.array(String, -1, ["SYMMETRYpickSite", "set picking site"]), Clazz.array(String, -1, ["pickSpin", "set picking spin"]), Clazz.array(String, -1, ["SYMMETRYpickSymmetry", "set picking symmetry"]), Clazz.array(String, -1, ["showConsole", "console"]), Clazz.array(String, -1, ["JSConsole", "JSCONSOLE"]), Clazz.array(String, -1, ["showFile", "console on;show file"]), Clazz.array(String, -1, ["showFileHeader", "console on;getProperty FileHeader"]), Clazz.array(String, -1, ["showHistory", "console on;show history"]), Clazz.array(String, -1, ["showIsosurface", "console on;show isosurface"]), Clazz.array(String, -1, ["showMeasure", "console on;show measure"]), Clazz.array(String, -1, ["showMo", "console on;show mo"]), Clazz.array(String, -1, ["showModel", "console on;show model"]), Clazz.array(String, -1, ["showOrient", "console on;show orientation"]), Clazz.array(String, -1, ["showSpacegroup", "console on;show spacegroup"]), Clazz.array(String, -1, ["showState", "console on;show state"]), Clazz.array(String, -1, ["reload", "load \"\""]), Clazz.array(String, -1, ["SIGNEDloadPdb", "load ?PdbId?"]), Clazz.array(String, -1, ["SIGNEDloadFile", "load ?"]), Clazz.array(String, -1, ["SIGNEDloadUrl", "load http://?"]), Clazz.array(String, -1, ["SIGNEDloadFileUnitCell", "load ? {1 1 1}"]), Clazz.array(String, -1, ["SIGNEDloadScript", "script ?.spt"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureRock", "animation mode loop;capture \'?Jmol.gif\' rock y 10"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureSpin", "animation mode loop;capture \'?Jmol.gif\' spin y"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureBegin", "capture \'?Jmol.gif\'"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureEnd", "capture \'\'"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureOff", "capture off"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureOn", "capture on"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureFpsSPECIAL", "animation fps @{0+prompt(\'Capture replay frames per second?\', animationFPS)};prompt \'animation FPS \' + animationFPS"]), Clazz.array(String, -1, ["SIGNEDJAVAcaptureLoopingSPECIAL", "animation mode @{(animationMode==\'ONCE\' ? \'LOOP\':\'ONCE\')};prompt \'animation MODE \' + animationMode"]), Clazz.array(String, -1, ["writeFileTextVARIABLE", "if (_applet && !_signedApplet) { console;show file } else { write file \"?FILE?\"}"]), Clazz.array(String, -1, ["writeState", "if (_applet && !_signedApplet) { console;show state } else { write state \"?FILEROOT?.spt\"}"]), Clazz.array(String, -1, ["writeHistory", "if (_applet && !_signedApplet) { console;show history } else { write history \"?FILEROOT?.his\"}"]), Clazz.array(String, -1, ["SIGNEDwriteJmol", "write PNGJ \"?FILEROOT?.png\""]), Clazz.array(String, -1, ["SIGNEDwriteIsosurface", "write isosurface \"?FILEROOT?.jvxl\""]), Clazz.array(String, -1, ["SIGNEDNOGLwriteGif", "write image \"?FILEROOT?.gif\""]), Clazz.array(String, -1, ["SIGNEDNOGLwriteJpg", "write image \"?FILEROOT?.jpg\""]), Clazz.array(String, -1, ["SIGNEDNOGLwritePng", "write image \"?FILEROOT?.png\""]), Clazz.array(String, -1, ["SIGNEDNOGLwritePngJmol", "write PNGJ \"?FILEROOT?.png\""]), Clazz.array(String, -1, ["SIGNEDNOGLwritePovray", "write POVRAY \"?FILEROOT?.pov\""]), Clazz.array(String, -1, ["SIGNEDNOGLwriteVrml", "write VRML \"?FILEROOT?.wrl\""]), Clazz.array(String, -1, ["SIGNEDNOGLwriteX3d", "write X3D \"?FILEROOT?.x3d\""]), Clazz.array(String, -1, ["SIGNEDNOGLwriteSTL", "write STL \"?FILEROOT?.stl\""]), Clazz.array(String, -1, ["SIGNEDNOGLwriteIdtf", "write IDTF \"?FILEROOT?.idtf\""]), Clazz.array(String, -1, ["SIGNEDNOGLwriteMaya", "write MAYA \"?FILEROOT?.ma\""]), Clazz.array(String, -1, ["SYMMETRYshowSymmetry", "console on;show symmetry"]), Clazz.array(String, -1, ["UNITCELLshow", "console on;show unitcell"]), Clazz.array(String, -1, ["extractMOL", "console on;getproperty extractModel \"visible\" "]), Clazz.array(String, -1, ["minimize", "minimize"]), Clazz.array(String, -1, ["modelkit", "set modelkitmode"]), Clazz.array(String, -1, ["surfDots", "dots on"]), Clazz.array(String, -1, ["surfVDW", "isosurface delete resolution 0 solvent 0 translucent"]), Clazz.array(String, -1, ["surfMolecular", "isosurface delete resolution 0 molecular translucent"]), Clazz.array(String, -1, ["surfSolvent14", "isosurface delete resolution 0 solvent 1.4 translucent"]), Clazz.array(String, -1, ["surfSolventAccessible14", "isosurface delete resolution 0 sasurface 1.4 translucent"]), Clazz.array(String, -1, ["surfMEP", "isosurface delete resolution 0 vdw color range all map MEP translucent"]), Clazz.array(String, -1, ["surf2MEP", "isosurface delete resolution 0 vdw color range -0.1 0.1 map MEP translucent"]), Clazz.array(String, -1, ["surfOpaque", "mo opaque;isosurface opaque"]), Clazz.array(String, -1, ["surfTranslucent", "mo translucent;isosurface translucent"]), Clazz.array(String, -1, ["surfOff", "mo delete;isosurface delete;var ~~sel = {selected};select *;dots off;select ~~sel"]), Clazz.array(String, -1, ["FILEMOLload", "save orientation;load \"\";restore orientation;center"]), Clazz.array(String, -1, ["FILEUNITone", "save orientation;load \"\" {1 1 1} ;restore orientation;center"]), Clazz.array(String, -1, ["FILEUNITnine", "save orientation;load \"\" {444 666 1} ;restore orientation;center"]), Clazz.array(String, -1, ["FILEUNITnineRestricted", "save orientation;load \"\" {444 666 1} ;restore orientation; unitcell on; display cell=555;center visible;zoom 200"]), Clazz.array(String, -1, ["FILEUNITninePoly", "save orientation;load \"\" {444 666 1} ;restore orientation; unitcell on; display cell=555; polyhedra 4,6 (displayed);center (visible);zoom 200"]), Clazz.array(String, -1, ["1p", "on"]), Clazz.array(String, -1, ["3p", "3"]), Clazz.array(String, -1, ["5p", "5"]), Clazz.array(String, -1, ["10p", "10"]), Clazz.array(String, -1, ["10a", "0.1"]), Clazz.array(String, -1, ["20a", "0.20"]), Clazz.array(String, -1, ["25a", "0.25"]), Clazz.array(String, -1, ["50a", "0.50"]), Clazz.array(String, -1, ["100a", "1.0"])]);
};

Clazz.newMeth(C$);
})();
;Clazz.setTVer('3.2.9-v1');//Created 2020-06-01 14:49:40 Java2ScriptVisitor version 3.2.9-v1 net.sf.j2s.core.jar version 3.2.9-v1
