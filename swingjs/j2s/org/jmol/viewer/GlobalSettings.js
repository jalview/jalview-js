(function(){var P$=Clazz.newPackage("org.jmol.viewer"),p$1={},I$=[[0,'org.jmol.c.CBK','java.util.Hashtable','javajs.util.P3','org.jmol.c.STR','org.jmol.viewer.JC','org.jmol.util.Logger','org.jmol.viewer.Viewer','org.jmol.viewer.StateManager','org.jmol.util.Escape','org.jmol.script.SV','javajs.util.DF','javajs.util.SB','javajs.util.PT']],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz.load(I$[0][i])))),!n&&i.$load$&&Clazz.load(i,2),i)};
/*c*/var C$=Clazz.newClass(P$, "GlobalSettings");

C$.$clinit$=2;

Clazz.newMeth(C$, '$init$', function () {
this.htUserVariables=Clazz.new_($I$(2,1));
this.zDepth=0;
this.zShadePower=3;
this.zSlab=50;
this.slabByMolecule=false;
this.slabByAtom=false;
this.allowEmbeddedScripts=true;
this.appendNew=true;
this.appletProxy="";
this.applySymmetryToBonds=false;
this.atomTypes="";
this.autoBond=true;
this.axesOrientationRasmol=false;
this.bondRadiusMilliAngstroms=150;
this.bondTolerance=0.45;
this.defaultDirectory="";
this.defaultStructureDSSP=true;
this.ptDefaultLattice=Clazz.new_($I$(3,1));
this.defaultLoadScript="";
this.defaultLoadFilter="";
this.defaultDropScript="zap; load SYNC \"%FILE\";if (%ALLOWCARTOONS && _loadScript == \'\' && defaultLoadScript == \'\' && _filetype == \'Pdb\') {if ({(protein or nucleic)&*/1.1} && {*/1.1}[1].groupindex != {*/1.1}[0].groupindex){select protein or nucleic;cartoons only;}if ({visible && cartoons > 0}){color structure}else{wireframe -0.1};if (!{visible}){spacefill 23%};select *}";
this.forceAutoBond=false;
this.fractionalRelative=true;
this.inlineNewlineChar="|";
this.minBondDistance=0.4;
this.minPixelSelRadius=6;
this.pdbAddHydrogens=false;
this.pdbGetHeader=false;
this.pdbSequential=false;
this.percentVdwAtom=23;
this.smallMoleculeMaxAtoms=40000;
this.minimizationMaxAtoms=200;
this.smartAromatic=true;
this.zeroBasedXyzRasmol=false;
this.legacyAutoBonding=false;
this.legacyHAddition=false;
this.legacyJavaFloat=false;
this.jmolInJSpecView=true;
this.modulateOccupancy=true;
this.allowRotateSelected=false;
this.allowMoveAtoms=false;
this.solventOn=false;
this.defaultAngleLabel="%VALUE %UNITS";
this.defaultDistanceLabel="%VALUE %UNITS";
this.defaultTorsionLabel="%VALUE %UNITS";
this.justifyMeasurements=false;
this.measureAllModels=false;
this.minimizationSteps=100;
this.minimizationRefresh=true;
this.minimizationSilent=false;
this.minimizationCriterion=0.001;
this.infoFontSize=20;
this.antialiasDisplay=false;
this.antialiasImages=true;
this.imageState=true;
this.antialiasTranslucent=true;
this.displayCellParameters=true;
this.dotsSelectedOnly=false;
this.dotSurface=true;
this.dotDensity=3;
this.dotScale=1;
this.meshScale=1;
this.greyscaleRendering=false;
this.isosurfaceKey=false;
this.isosurfacePropertySmoothing=true;
this.isosurfacePropertySmoothingPower=7;
this.platformSpeed=10;
this.repaintWaitMs=1000;
this.showHiddenSelectionHalos=false;
this.showKeyStrokes=true;
this.showMeasurements=true;
this.showTiming=false;
this.zoomLarge=true;
this.zoomHeight=false;
this.partialDots=false;
this.bondModeOr=false;
this.hbondsBackbone=false;
this.hbondsAngleMinimum=90.0;
this.hbondsDistanceMaximum=3.25;
this.hbondsRasmol=true;
this.hbondsSolid=false;
this.modeMultipleBond=2;
this.showHydrogens=true;
this.showMultipleBonds=true;
this.ssbondsBackbone=false;
this.multipleBondSpacing=-1;
this.multipleBondRadiusFactor=0;
this.multipleBondBananas=false;
this.nboCharges=true;
this.cartoonBaseEdges=false;
this.cartoonRockets=false;
this.cartoonBlockHeight=0.5;
this.cartoonBlocks=false;
this.cartoonSteps=false;
this.cartoonFancy=false;
this.cartoonLadders=false;
this.cartoonRibose=false;
this.chainCaseSensitive=false;
this.cipRule6Full=false;
this.hermiteLevel=0;
this.highResolutionFlag=false;
this.rangeSelected=false;
this.rasmolHydrogenSetting=true;
this.rasmolHeteroSetting=true;
this.ribbonAspectRatio=16;
this.ribbonBorder=false;
this.rocketBarrels=false;
this.sheetSmoothing=1;
this.traceAlpha=true;
this.translucent=true;
this.twistedSheets=false;
this.autoplayMovie=true;
this.allowAudio=true;
this.allowGestures=false;
this.allowModelkit=true;
this.allowMultiTouch=true;
this.allowKeyStrokes=false;
this.hiddenLinesDashed=false;
this.animationFps=10;
this.atomPicking=true;
this.autoFps=false;
this.axesMode=603979809;
this.axesScale=2;
this.axesOffset=0;
this.starWidth=0.05;
this.bondPicking=false;
this.dataSeparator="~~~";
this.debugScript=false;
this.defaultDrawArrowScale=0.5;
this.defaultLabelXYZ="%a";
this.defaultLabelPDB="%m%r";
this.defaultTranslucent=0.5;
this.delayMaximumMs=0;
this.dipoleScale=1.0;
this.drawFontSize=14.0;
this.disablePopupMenu=false;
this.dragSelected=false;
this.drawHover=false;
this.drawPicking=false;
this.dsspCalcHydrogen=true;
this.energyUnits="kJ";
this.exportScale=0.0;
this.helpPath="https://chemapps.stolaf.edu/jmol/docs/index.htm";
this.fontScaling=false;
this.fontCaching=true;
this.forceField="MMFF";
this.helixStep=1;
this.hideNameInPopup=false;
this.hoverDelayMs=500;
this.loadAtomDataTolerance=0.01;
this.logCommands=false;
this.logGestures=false;
this.measureDistanceUnits="nanometers";
this.measurementLabels=true;
this.messageStyleChime=false;
this.monitorEnergy=false;
this.modulationScale=1;
this.multiProcessor=true;
this.particleRadius=20;
this.pickingSpinRate=10;
this.pickLabel="";
this.pointGroupDistanceTolerance=0.2;
this.pointGroupLinearTolerance=8.0;
this.preserveState=true;
this.propertyColorScheme="roygb";
this.quaternionFrame="p";
this.saveProteinStructureState=true;
this.showModVecs=false;
this.showUnitCellDetails=true;
this.solventProbeRadius=1.2;
this.scriptDelay=0;
this.selectAllModels=true;
this.statusReporting=true;
this.strandCountForStrands=5;
this.strandCountForMeshRibbon=7;
this.strutSpacing=6;
this.strutLengthMaximum=7.0;
this.strutDefaultRadius=0.3;
this.strutsMultiple=false;
this.useMinimizationThread=true;
this.useNumberLocalization=true;
this.useScriptQueue=true;
this.waitForMoveTo=true;
this.noDelay=false;
this.vectorScale=1.0;
this.vectorSymmetry=false;
this.vectorsCentered=false;
this.vectorTrail=0;
this.vibrationPeriod=1.0;
this.vibrationScale=1.0;
this.wireframeRotation=false;
this.hideNavigationPoint=false;
this.navigationMode=false;
this.navigationPeriodic=false;
this.navigationSpeed=5;
this.showNavigationPointAlways=false;
this.stereoState=null;
this.modelKitMode=false;
this.objColors=Clazz.array(Integer.TYPE, [7]);
this.objStateOn=Clazz.array(Boolean.TYPE, [7]);
this.objMad10=Clazz.array(Integer.TYPE, [7]);
this.ellipsoidAxes=false;
this.ellipsoidDots=false;
this.ellipsoidArcs=false;
this.ellipsoidArrows=false;
this.ellipsoidFill=false;
this.ellipsoidBall=true;
this.ellipsoidDotCount=200;
this.ellipsoidAxisDiameter=0.02;
this.testFlag1=false;
this.testFlag2=false;
this.testFlag3=false;
this.testFlag4=false;
this.structureList=Clazz.new_($I$(2,1));
{
this.structureList.put$O$O($I$(4).TURN, Clazz.array(Float.TYPE, -1, [30, 90, -15, 95]));
this.structureList.put$O$O($I$(4).SHEET, Clazz.array(Float.TYPE, -1, [-180, -10, 70, 180, -180, -45, -180, -130, 140, 180, 90, 180]));
this.structureList.put$O$O($I$(4).HELIX, Clazz.array(Float.TYPE, -1, [-160, 0, -100, 45]));
}
this.bondingVersion=0;
},1);

C$.$fields$=[['Z',['slabByMolecule','slabByAtom','allowEmbeddedScripts','appendNew','applySymmetryToBonds','autoBond','axesOrientationRasmol','defaultStructureDSSP','forceAutoBond','fractionalRelative','pdbAddHydrogens','pdbGetHeader','pdbSequential','smartAromatic','zeroBasedXyzRasmol','legacyAutoBonding','legacyHAddition','legacyJavaFloat','jmolInJSpecView','modulateOccupancy','allowRotateSelected','allowMoveAtoms','solventOn','justifyMeasurements','measureAllModels','minimizationRefresh','minimizationSilent','antialiasDisplay','antialiasImages','imageState','antialiasTranslucent','displayCellParameters','dotsSelectedOnly','dotSurface','greyscaleRendering','isosurfaceKey','isosurfacePropertySmoothing','showHiddenSelectionHalos','showKeyStrokes','showMeasurements','showTiming','zoomLarge','zoomHeight','partialDots','bondModeOr','hbondsBackbone','hbondsRasmol','hbondsSolid','showHydrogens','showMultipleBonds','ssbondsBackbone','multipleBondBananas','nboCharges','cartoonBaseEdges','cartoonRockets','cartoonBlocks','cartoonSteps','cartoonFancy','cartoonLadders','cartoonRibose','chainCaseSensitive','cipRule6Full','highResolutionFlag','rangeSelected','rasmolHydrogenSetting','rasmolHeteroSetting','ribbonBorder','rocketBarrels','traceAlpha','translucent','twistedSheets','autoplayMovie','allowAudio','allowGestures','allowModelkit','allowMultiTouch','allowKeyStrokes','hiddenLinesDashed','atomPicking','autoFps','bondPicking','debugScript','disablePopupMenu','dragSelected','drawHover','drawPicking','dsspCalcHydrogen','fontScaling','fontCaching','hideNameInPopup','logCommands','logGestures','measurementLabels','messageStyleChime','monitorEnergy','multiProcessor','preserveState','saveProteinStructureState','showModVecs','showUnitCellDetails','selectAllModels','statusReporting','strutsMultiple','useMinimizationThread','useNumberLocalization','useScriptQueue','waitForMoveTo','noDelay','vectorSymmetry','vectorsCentered','wireframeRotation','hideNavigationPoint','navigationMode','navigationPeriodic','showNavigationPointAlways','modelKitMode','ellipsoidAxes','ellipsoidDots','ellipsoidArcs','ellipsoidArrows','ellipsoidFill','ellipsoidBall','testFlag1','testFlag2','testFlag3','testFlag4','haveSetStructureList'],'B',['modeMultipleBond'],'C',['inlineNewlineChar'],'F',['bondTolerance','minBondDistance','minimizationCriterion','hbondsAngleMinimum','hbondsDistanceMaximum','multipleBondSpacing','multipleBondRadiusFactor','cartoonBlockHeight','sheetSmoothing','axesScale','axesOffset','starWidth','defaultDrawArrowScale','defaultTranslucent','dipoleScale','drawFontSize','exportScale','loadAtomDataTolerance','modulationScale','particleRadius','pointGroupDistanceTolerance','pointGroupLinearTolerance','solventProbeRadius','strutLengthMaximum','strutDefaultRadius','vectorScale','vibrationPeriod','vibrationScale','navigationSpeed','ellipsoidAxisDiameter'],'I',['zDepth','zShadePower','zSlab','minPixelSelRadius','percentVdwAtom','smallMoleculeMaxAtoms','minimizationMaxAtoms','minimizationSteps','infoFontSize','dotDensity','dotScale','meshScale','isosurfacePropertySmoothingPower','platformSpeed','repaintWaitMs','hermiteLevel','ribbonAspectRatio','animationFps','axesMode','delayMaximumMs','helixStep','hoverDelayMs','pickingSpinRate','scriptDelay','strandCountForStrands','strandCountForMeshRibbon','strutSpacing','vectorTrail','ellipsoidDotCount','bondingVersion'],'H',['bondRadiusMilliAngstroms'],'S',['appletProxy','atomTypes','defaultDirectory','defaultLoadScript','defaultLoadFilter','defaultDropScript','loadFormat','pdbLoadFormat','pdbLoadLigandFormat','nmrUrlFormat','nmrPredictFormat','smilesUrlFormat','nihResolverFormat','pubChemFormat','macroDirectory','defaultAngleLabel','defaultDistanceLabel','defaultTorsionLabel','backgroundImageFileName','dataSeparator','defaultLabelXYZ','defaultLabelPDB','energyUnits','helpPath','forceField','measureDistanceUnits','pickLabel','propertyColorScheme','quaternionFrame','stereoState'],'O',['vwr','org.jmol.viewer.Viewer','htNonbooleanParameterValues','java.util.Map','+htBooleanParameterFlags','+htPropertyFlagsRemoved','+htUserVariables','ptDefaultLattice','javajs.util.P3','objColors','int[]','objStateOn','boolean[]','objMad10','int[]','structureList','java.util.Map']]
,['S',['unreportedProperties']]]

Clazz.newMeth(C$, 'c$$org_jmol_viewer_Viewer$org_jmol_viewer_GlobalSettings$Z', function (vwr, g, clearUserVariables) {
;C$.$init$.apply(this);
this.vwr=vwr;
this.htNonbooleanParameterValues=Clazz.new_($I$(2,1));
this.htBooleanParameterFlags=Clazz.new_($I$(2,1));
this.htPropertyFlagsRemoved=Clazz.new_($I$(2,1));
if (g != null ) {
if (!clearUserVariables) {
this.setO$S$O("_pngjFile", g.getParameter$S$Z("_pngjFile", false));
this.htUserVariables=g.htUserVariables;
}this.debugScript=g.debugScript;
this.disablePopupMenu=g.disablePopupMenu;
this.messageStyleChime=g.messageStyleChime;
this.defaultDirectory=g.defaultDirectory;
this.autoplayMovie=g.autoplayMovie;
this.allowAudio=g.allowAudio;
this.allowGestures=g.allowGestures;
this.allowModelkit=g.allowModelkit;
this.allowMultiTouch=g.allowMultiTouch;
this.allowKeyStrokes=g.allowKeyStrokes;
this.legacyAutoBonding=g.legacyAutoBonding;
this.legacyHAddition=g.legacyHAddition;
this.legacyJavaFloat=g.legacyJavaFloat;
this.bondingVersion=g.bondingVersion;
this.platformSpeed=g.platformSpeed;
this.useScriptQueue=g.useScriptQueue;
this.showTiming=g.showTiming;
this.wireframeRotation=g.wireframeRotation;
this.testFlag1=g.testFlag1;
this.testFlag2=g.testFlag2;
this.testFlag3=g.testFlag3;
this.testFlag4=g.testFlag4;
}this.loadFormat=this.pdbLoadFormat=$I$(5).databases.get$O("pdb");
this.pdbLoadLigandFormat=$I$(5).databases.get$O("ligand");
this.nmrUrlFormat=$I$(5).databases.get$O("nmr");
this.nmrPredictFormat=$I$(5).databases.get$O("nmrdb");
this.smilesUrlFormat=$I$(5).databases.get$O("nci") + "/file?format=sdf&get3d=true";
this.nihResolverFormat=$I$(5).databases.get$O("nci");
this.pubChemFormat=$I$(5).databases.get$O("pubchem");
this.macroDirectory="https://chemapps.stolaf.edu/jmol/macros";
for (var item, $item = 0, $$item = $I$(1).values$(); $item<$$item.length&&((item=($$item[$item])),1);$item++) p$1.resetValue$S$org_jmol_viewer_GlobalSettings.apply(this, [item.name$() + "Callback", g]);

this.setF$S$F("cameraDepth", 3.0);
this.setI$S$I("contextDepthMax", 100);
this.setI$S$I("depth", 0);
this.setF$S$F("gestureSwipeFactor", 1.0);
this.setB$S$Z("hideNotSelected", false);
this.setI$S$I("historyLevel", 0);
this.setO$S$O("hoverLabel", "");
this.setB$S$Z("isKiosk", vwr.isKiosk$());
this.setO$S$O("logFile", vwr.getLogFileName$());
this.setI$S$I("logLevel", $I$(6).getLogLevel$());
this.setF$S$F("mouseWheelFactor", 1.15);
this.setF$S$F("mouseDragFactor", 1.0);
this.setI$S$I("navFps", 10);
this.setI$S$I("navigationDepth", 0);
this.setI$S$I("navigationSlab", 0);
this.setI$S$I("navX", 0);
this.setI$S$I("navY", 0);
this.setI$S$I("navZ", 0);
this.setO$S$O("pathForAllFiles", "");
this.setB$S$Z("perspectiveDepth", true);
this.setI$S$I("perspectiveModel", 11);
this.setO$S$O("picking", "identify");
this.setO$S$O("pickingStyle", "toggle");
this.setB$S$Z("refreshing", true);
this.setI$S$I("rotationRadius", 0);
this.setI$S$I("scaleAngstromsPerInch", 0);
this.setI$S$I("scriptReportingLevel", 0);
this.setB$S$Z("selectionHalos", false);
this.setB$S$Z("showaxes", false);
this.setB$S$Z("showboundbox", false);
this.setB$S$Z("showfrank", false);
this.setB$S$Z("showUnitcell", false);
this.setI$S$I("slab", 100);
this.setB$S$Z("slabEnabled", false);
this.setF$S$F("slabrange", 0.0);
this.setI$S$I("spinX", 0);
this.setI$S$I("spinY", 30);
this.setI$S$I("spinZ", 0);
this.setI$S$I("spinFps", 30);
this.setF$S$F("visualRange", 5.0);
this.setI$S$I("stereoDegrees", -5);
this.setB$S$Z("syncScript", vwr.sm.syncingScripts);
this.setB$S$Z("syncMouse", vwr.sm.syncingMouse);
this.setB$S$Z("syncStereo", vwr.sm.stereoSync);
this.setB$S$Z("windowCentered", true);
this.setB$S$Z("zoomEnabled", true);
this.setI$S$I("_version", $I$(5).versionInt);
this.setO$S$O("_versionDate", $I$(7).getJmolVersion$());
this.setB$S$Z("axesWindow", true);
this.setB$S$Z("axesMolecular", false);
this.setB$S$Z("axesPosition", false);
this.setB$S$Z("axesUnitcell", false);
this.setI$S$I("backgroundModel", 0);
this.setB$S$Z("colorRasmol", false);
this.setO$S$O("currentLocalPath", "");
this.setO$S$O("defaultLattice", "{0 0 0}");
this.setO$S$O("defaultColorScheme", "Jmol");
this.setO$S$O("defaultDirectoryLocal", "");
this.setO$S$O("defaults", "Jmol");
this.setO$S$O("defaultVDW", "Jmol");
this.setO$S$O("exportDrivers", "Idtf;Maya;Povray;Vrml;X3d;Stl;Tachyon;Obj");
this.setI$S$I("propertyAtomNumberColumnCount", 0);
this.setI$S$I("propertyAtomNumberField", 0);
this.setI$S$I("propertyDataColumnCount", 0);
this.setI$S$I("propertyDataField", 0);
this.setB$S$Z("undo", true);
this.setB$S$Z("allowEmbeddedScripts", this.allowEmbeddedScripts);
this.setB$S$Z("allowGestures", this.allowGestures);
this.setB$S$Z("allowKeyStrokes", this.allowKeyStrokes);
this.setB$S$Z("allowModelkit", this.allowModelkit);
this.setB$S$Z("allowMultiTouch", this.allowMultiTouch);
this.setB$S$Z("allowRotateSelected", this.allowRotateSelected);
this.setB$S$Z("allowMoveAtoms", this.allowMoveAtoms);
this.setI$S$I("animationFps", this.animationFps);
this.setB$S$Z("antialiasImages", this.antialiasImages);
this.setB$S$Z("antialiasDisplay", this.antialiasDisplay);
this.setB$S$Z("antialiasTranslucent", this.antialiasTranslucent);
this.setB$S$Z("appendNew", this.appendNew);
this.setO$S$O("appletProxy", this.appletProxy);
this.setB$S$Z("applySymmetryToBonds", this.applySymmetryToBonds);
this.setB$S$Z("atomPicking", this.atomPicking);
this.setO$S$O("atomTypes", this.atomTypes);
this.setB$S$Z("autoBond", this.autoBond);
this.setB$S$Z("autoFps", this.autoFps);
this.setI$S$I("axesMode", this.axesMode == 603979808 ? 2 : this.axesMode == 603979804 ? 1 : 0);
this.setF$S$F("axesScale", this.axesScale);
this.setF$S$F("axesOffset", this.axesOffset);
this.setB$S$Z("axesOrientationRasmol", this.axesOrientationRasmol);
this.setF$S$F("cartoonBlockHeight", this.cartoonBlockHeight);
this.setB$S$Z("cartoonBlocks", this.cartoonBlocks);
this.setB$S$Z("cartoonSteps", this.cartoonSteps);
this.setB$S$Z("bondModeOr", this.bondModeOr);
this.setB$S$Z("bondPicking", this.bondPicking);
this.setI$S$I("bondRadiusMilliAngstroms", this.bondRadiusMilliAngstroms);
this.setF$S$F("bondTolerance", this.bondTolerance);
this.setB$S$Z("cartoonBaseEdges", this.cartoonBaseEdges);
this.setB$S$Z("cartoonFancy", this.cartoonFancy);
this.setB$S$Z("cartoonLadders", this.cartoonLadders);
this.setB$S$Z("cartoonLadders", this.cartoonRibose);
this.setB$S$Z("cartoonRockets", this.cartoonRockets);
this.setB$S$Z("chainCaseSensitive", this.chainCaseSensitive);
this.setB$S$Z("cipRule6Full", this.cipRule6Full);
this.setI$S$I("bondingVersion", this.bondingVersion);
this.setO$S$O("dataSeparator", this.dataSeparator);
this.setB$S$Z("debugScript", this.debugScript);
this.setO$S$O("defaultAngleLabel", this.defaultAngleLabel);
this.setF$S$F("defaultDrawArrowScale", this.defaultDrawArrowScale);
this.setO$S$O("defaultDirectory", this.defaultDirectory);
this.setO$S$O("defaultDistanceLabel", this.defaultDistanceLabel);
this.setO$S$O("defaultDropScript", this.defaultDropScript);
this.setO$S$O("defaultLabelPDB", this.defaultLabelPDB);
this.setO$S$O("defaultLabelXYZ", this.defaultLabelXYZ);
this.setO$S$O("defaultLoadFilter", this.defaultLoadFilter);
this.setO$S$O("defaultLoadScript", this.defaultLoadScript);
this.setB$S$Z("defaultStructureDSSP", this.defaultStructureDSSP);
this.setO$S$O("defaultTorsionLabel", this.defaultTorsionLabel);
this.setF$S$F("defaultTranslucent", this.defaultTranslucent);
this.setI$S$I("delayMaximumMs", this.delayMaximumMs);
this.setF$S$F("dipoleScale", this.dipoleScale);
this.setB$S$Z("disablePopupMenu", this.disablePopupMenu);
this.setB$S$Z("displayCellParameters", this.displayCellParameters);
this.setI$S$I("dotDensity", this.dotDensity);
this.setI$S$I("dotScale", this.dotScale);
this.setB$S$Z("dotsSelectedOnly", this.dotsSelectedOnly);
this.setB$S$Z("dotSurface", this.dotSurface);
this.setB$S$Z("dragSelected", this.dragSelected);
this.setB$S$Z("drawHover", this.drawHover);
this.setF$S$F("drawFontSize", this.drawFontSize);
this.setB$S$Z("drawPicking", this.drawPicking);
this.setB$S$Z("dsspCalculateHydrogenAlways", this.dsspCalcHydrogen);
this.setB$S$Z("ellipsoidArcs", this.ellipsoidArcs);
this.setB$S$Z("ellipsoidArrows", this.ellipsoidArrows);
this.setB$S$Z("ellipsoidAxes", this.ellipsoidAxes);
this.setF$S$F("ellipsoidAxisDiameter", this.ellipsoidAxisDiameter);
this.setB$S$Z("ellipsoidBall", this.ellipsoidBall);
this.setI$S$I("ellipsoidDotCount", this.ellipsoidDotCount);
this.setB$S$Z("ellipsoidDots", this.ellipsoidDots);
this.setB$S$Z("ellipsoidFill", this.ellipsoidFill);
this.setO$S$O("energyUnits", this.energyUnits);
this.setF$S$F("exportScale", this.exportScale);
this.setB$S$Z("fontScaling", this.fontScaling);
this.setB$S$Z("fontCaching", this.fontCaching);
this.setB$S$Z("forceAutoBond", this.forceAutoBond);
this.setO$S$O("forceField", this.forceField);
this.setB$S$Z("fractionalRelative", this.fractionalRelative);
this.setF$S$F("particleRadius", this.particleRadius);
this.setB$S$Z("greyscaleRendering", this.greyscaleRendering);
this.setF$S$F("hbondsAngleMinimum", this.hbondsAngleMinimum);
this.setF$S$F("hbondsDistanceMaximum", this.hbondsDistanceMaximum);
this.setB$S$Z("hbondsBackbone", this.hbondsBackbone);
this.setB$S$Z("hbondsRasmol", this.hbondsRasmol);
this.setB$S$Z("hbondsSolid", this.hbondsSolid);
this.setI$S$I("helixStep", this.helixStep);
this.setO$S$O("helpPath", this.helpPath);
this.setI$S$I("hermiteLevel", this.hermiteLevel);
this.setB$S$Z("hideNameInPopup", this.hideNameInPopup);
this.setB$S$Z("hideNavigationPoint", this.hideNavigationPoint);
this.setB$S$Z("hiddenLinesDashed", this.hiddenLinesDashed);
this.setB$S$Z("highResolution", this.highResolutionFlag);
this.setF$S$F("hoverDelay", this.hoverDelayMs / 1000.0);
this.setB$S$Z("imageState", this.imageState);
this.setI$S$I("infoFontSize", this.infoFontSize);
this.setB$S$Z("isosurfaceKey", this.isosurfaceKey);
this.setB$S$Z("isosurfacePropertySmoothing", this.isosurfacePropertySmoothing);
this.setI$S$I("isosurfacePropertySmoothingPower", this.isosurfacePropertySmoothingPower);
this.setB$S$Z("jmolInJSpecView", this.jmolInJSpecView);
this.setB$S$Z("justifyMeasurements", this.justifyMeasurements);
this.setB$S$Z("legacyAutoBonding", this.legacyAutoBonding);
this.setB$S$Z("legacyHAddition", this.legacyHAddition);
this.setB$S$Z("legacyJavaFloat", this.legacyJavaFloat);
this.setF$S$F("loadAtomDataTolerance", this.loadAtomDataTolerance);
this.setO$S$O("loadFormat", this.loadFormat);
this.setO$S$O("loadLigandFormat", this.pdbLoadLigandFormat);
this.setB$S$Z("logCommands", this.logCommands);
this.setB$S$Z("logGestures", this.logGestures);
this.setB$S$Z("measureAllModels", this.measureAllModels);
this.setB$S$Z("measurementLabels", this.measurementLabels);
this.setO$S$O("measurementUnits", this.measureDistanceUnits);
this.setI$S$I("meshScale", this.meshScale);
this.setB$S$Z("messageStyleChime", this.messageStyleChime);
this.setF$S$F("minBondDistance", this.minBondDistance);
this.setI$S$I("minPixelSelRadius", this.minPixelSelRadius);
this.setI$S$I("minimizationSteps", this.minimizationSteps);
this.setB$S$Z("minimizationRefresh", this.minimizationRefresh);
this.setB$S$Z("minimizationSilent", this.minimizationSilent);
this.setF$S$F("minimizationCriterion", this.minimizationCriterion);
this.setB$S$Z("modelKitMode", this.modelKitMode);
this.setF$S$F("modulationScale", this.modulationScale);
this.setB$S$Z("monitorEnergy", this.monitorEnergy);
this.setF$S$F("multipleBondRadiusFactor", this.multipleBondRadiusFactor);
this.setB$S$Z("multipleBondBananas", this.multipleBondBananas);
this.setF$S$F("multipleBondSpacing", this.multipleBondSpacing);
this.setB$S$Z("multiProcessor", this.multiProcessor && ($I$(7).nProcessors > 1) );
this.setB$S$Z("navigationMode", this.navigationMode);
this.setB$S$Z("navigationPeriodic", this.navigationPeriodic);
this.setF$S$F("navigationSpeed", this.navigationSpeed);
this.setB$S$Z("nboCharges", this.nboCharges);
this.setB$S$Z("noDelay", this.noDelay);
this.setO$S$O("nmrPredictFormat", this.nmrPredictFormat);
this.setO$S$O("nmrUrlFormat", this.nmrUrlFormat);
this.setB$S$Z("partialDots", this.partialDots);
this.setB$S$Z("pdbAddHydrogens", this.pdbAddHydrogens);
this.setB$S$Z("pdbGetHeader", this.pdbGetHeader);
this.setB$S$Z("pdbSequential", this.pdbSequential);
this.setI$S$I("percentVdwAtom", this.percentVdwAtom);
this.setI$S$I("pickingSpinRate", this.pickingSpinRate);
this.setO$S$O("pickLabel", this.pickLabel);
this.setI$S$I("platformSpeed", this.platformSpeed);
this.setF$S$F("pointGroupLinearTolerance", this.pointGroupLinearTolerance);
this.setF$S$F("pointGroupDistanceTolerance", this.pointGroupDistanceTolerance);
this.setB$S$Z("preserveState", this.preserveState);
this.setO$S$O("propertyColorScheme", this.propertyColorScheme);
this.setO$S$O("quaternionFrame", this.quaternionFrame);
this.setB$S$Z("rangeSelected", this.rangeSelected);
this.setI$S$I("repaintWaitMs", this.repaintWaitMs);
this.setI$S$I("ribbonAspectRatio", this.ribbonAspectRatio);
this.setB$S$Z("ribbonBorder", this.ribbonBorder);
this.setB$S$Z("rocketBarrels", this.rocketBarrels);
this.setB$S$Z("saveProteinStructureState", this.saveProteinStructureState);
this.setB$S$Z("scriptqueue", this.useScriptQueue);
this.setB$S$Z("selectAllModels", this.selectAllModels);
this.setB$S$Z("selectHetero", this.rasmolHeteroSetting);
this.setB$S$Z("selectHydrogen", this.rasmolHydrogenSetting);
this.setF$S$F("sheetSmoothing", this.sheetSmoothing);
this.setB$S$Z("showHiddenSelectionHalos", this.showHiddenSelectionHalos);
this.setB$S$Z("showHydrogens", this.showHydrogens);
this.setB$S$Z("showKeyStrokes", this.showKeyStrokes);
this.setB$S$Z("showMeasurements", this.showMeasurements);
this.setB$S$Z("showModulationVectors", this.showModVecs);
this.setB$S$Z("showMultipleBonds", this.showMultipleBonds);
this.setB$S$Z("showNavigationPointAlways", this.showNavigationPointAlways);
this.setI$S$I("showScript", this.scriptDelay);
this.setB$S$Z("showtiming", this.showTiming);
this.setB$S$Z("slabByMolecule", this.slabByMolecule);
this.setB$S$Z("slabByAtom", this.slabByAtom);
this.setB$S$Z("smartAromatic", this.smartAromatic);
this.setI$S$I("minimizationMaxAtoms", this.minimizationMaxAtoms);
this.setI$S$I("smallMoleculeMaxAtoms", this.smallMoleculeMaxAtoms);
this.setO$S$O("smilesUrlFormat", this.smilesUrlFormat);
this.setO$S$O("macroDirectory", this.macroDirectory);
this.setO$S$O("nihResolverFormat", this.nihResolverFormat);
this.setO$S$O("pubChemFormat", this.pubChemFormat);
this.setB$S$Z("showUnitCellDetails", this.showUnitCellDetails);
this.setB$S$Z("solventProbe", this.solventOn);
this.setF$S$F("solventProbeRadius", this.solventProbeRadius);
this.setB$S$Z("ssbondsBackbone", this.ssbondsBackbone);
this.setF$S$F("starWidth", this.starWidth);
this.setB$S$Z("statusReporting", this.statusReporting);
this.setI$S$I("strandCount", this.strandCountForStrands);
this.setI$S$I("strandCountForStrands", this.strandCountForStrands);
this.setI$S$I("strandCountForMeshRibbon", this.strandCountForMeshRibbon);
this.setF$S$F("strutDefaultRadius", this.strutDefaultRadius);
this.setF$S$F("strutLengthMaximum", this.strutLengthMaximum);
this.setI$S$I("strutSpacing", this.strutSpacing);
this.setB$S$Z("strutsMultiple", this.strutsMultiple);
this.setB$S$Z("testFlag1", this.testFlag1);
this.setB$S$Z("testFlag2", this.testFlag2);
this.setB$S$Z("testFlag3", this.testFlag3);
this.setB$S$Z("testFlag4", this.testFlag4);
this.setB$S$Z("traceAlpha", this.traceAlpha);
this.setB$S$Z("translucent", this.translucent);
this.setB$S$Z("twistedSheets", this.twistedSheets);
this.setB$S$Z("useMinimizationThread", this.useMinimizationThread);
this.setB$S$Z("useNumberLocalization", this.useNumberLocalization);
this.setB$S$Z("vectorsCentered", this.vectorsCentered);
this.setF$S$F("vectorScale", this.vectorScale);
this.setB$S$Z("vectorSymmetry", this.vectorSymmetry);
this.setI$S$I("vectorTrail", this.vectorTrail);
this.setF$S$F("vibrationPeriod", this.vibrationPeriod);
this.setF$S$F("vibrationScale", this.vibrationScale);
this.setB$S$Z("waitForMoveTo", this.waitForMoveTo);
this.setB$S$Z("wireframeRotation", this.wireframeRotation);
this.setI$S$I("zDepth", this.zDepth);
this.setB$S$Z("zeroBasedXyzRasmol", this.zeroBasedXyzRasmol);
this.setB$S$Z("zoomHeight", this.zoomHeight);
this.setB$S$Z("zoomLarge", this.zoomLarge);
this.setI$S$I("zShadePower", this.zShadePower);
this.setI$S$I("zSlab", this.zSlab);
}, 1);

Clazz.newMeth(C$, 'clear$', function () {
var e=this.htUserVariables.keySet$().iterator$();
while (e.hasNext$()){
var key=e.next$();
if (key.charAt$I(0) == "@" || key.startsWith$S("site_") ) e.remove$();
}
this.vwr.setPicked$I$Z(-1, false);
this.setI$S$I("_atomhovered", -1);
this.setO$S$O("_pickinfo", "");
this.setB$S$Z("selectionhalos", false);
this.setB$S$Z("hidenotselected", false);
this.setB$S$Z("measurementlabels", this.measurementLabels=true);
this.setB$S$Z("drawHover", this.drawHover=false);
this.vwr.stm.saveScene$S$java_util_Map("DELETE", null);
});

Clazz.newMeth(C$, 'setUnits$S', function (units) {
var mu=this.measureDistanceUnits;
var eu=this.energyUnits;
if (units.equalsIgnoreCase$S("angstroms")) this.measureDistanceUnits="angstroms";
 else if (units.equalsIgnoreCase$S("nanometers") || units.equalsIgnoreCase$S("nm") ) this.measureDistanceUnits="nanometers";
 else if (units.equalsIgnoreCase$S("picometers") || units.equalsIgnoreCase$S("pm") ) this.measureDistanceUnits="picometers";
 else if (units.equalsIgnoreCase$S("bohr") || units.equalsIgnoreCase$S("au") ) this.measureDistanceUnits="au";
 else if (units.equalsIgnoreCase$S("vanderwaals") || units.equalsIgnoreCase$S("vdw") ) this.measureDistanceUnits="vdw";
 else if (units.toLowerCase$().endsWith$S("hz") || units.toLowerCase$().endsWith$S("khz") ) this.measureDistanceUnits=units.toLowerCase$();
 else if (units.equalsIgnoreCase$S("kj")) this.energyUnits="kJ";
 else if (units.equalsIgnoreCase$S("kcal")) this.energyUnits="kcal";
if (!mu.equalsIgnoreCase$S(this.measureDistanceUnits)) this.setO$S$O("measurementUnits", this.measureDistanceUnits);
 else if (!eu.equalsIgnoreCase$S(this.energyUnits)) this.setO$S$O("energyUnits", this.energyUnits);
});

Clazz.newMeth(C$, 'isJmolVariable$S', function (key) {
return key.charAt$I(0) == "_" || this.htNonbooleanParameterValues.containsKey$O(key=key.toLowerCase$())  || this.htBooleanParameterFlags.containsKey$O(key)  || C$.unreportedProperties.indexOf$S(";" + key + ";" ) >= 0 ;
});

Clazz.newMeth(C$, 'resetValue$S$org_jmol_viewer_GlobalSettings', function (name, g) {
this.setO$S$O(name, g == null  ? "" : g.getParameter$S$Z(name, true));
}, p$1);

Clazz.newMeth(C$, 'setB$S$Z', function (name, value) {
name=name.toLowerCase$();
if (this.htNonbooleanParameterValues.containsKey$O(name)) return;
this.htBooleanParameterFlags.put$O$O(name, value ? Boolean.TRUE : Boolean.FALSE);
});

Clazz.newMeth(C$, 'setI$S$I', function (name, value) {
if (value != 2147483647) this.setO$S$O(name, Integer.valueOf$I(value));
});

Clazz.newMeth(C$, 'setF$S$F', function (name, value) {
if (!Float.isNaN$F(value)) this.setO$S$O(name, Float.valueOf$F(value));
});

Clazz.newMeth(C$, 'setO$S$O', function (name, value) {
name=name.toLowerCase$();
if (value == null  || this.htBooleanParameterFlags.containsKey$O(name) ) return;
this.htNonbooleanParameterValues.put$O$O(name, value);
});

Clazz.newMeth(C$, 'removeParam$S', function (key) {
key=key.toLowerCase$();
if (this.htBooleanParameterFlags.containsKey$O(key)) {
this.htBooleanParameterFlags.remove$O(key);
if (!this.htPropertyFlagsRemoved.containsKey$O(key)) this.htPropertyFlagsRemoved.put$O$O(key, Boolean.FALSE);
return;
}if (this.htNonbooleanParameterValues.containsKey$O(key)) this.htNonbooleanParameterValues.remove$O(key);
});

Clazz.newMeth(C$, 'setUserVariable$S$org_jmol_script_SV', function (key, $var) {
if ($var != null ) {
key=key.toLowerCase$();
this.htUserVariables.put$O$O(key, $var.setName$S(key));
}return $var;
});

Clazz.newMeth(C$, 'unsetUserVariable$S', function (key) {
if (key.equals$O("all") || key.equals$O("variables") ) {
this.htUserVariables.clear$();
$I$(6).info$S("all user-defined variables deleted");
} else if (this.htUserVariables.containsKey$O(key)) {
$I$(6).info$S("variable " + key + " deleted" );
this.htUserVariables.remove$O(key);
}});

Clazz.newMeth(C$, 'removeUserVariable$S', function (key) {
this.htUserVariables.remove$O(key);
});

Clazz.newMeth(C$, 'getUserVariable$S', function (name) {
if (name == null ) return null;
name=name.toLowerCase$();
return this.htUserVariables.get$O(name);
});

Clazz.newMeth(C$, 'getParameterEscaped$S$I', function (name, nMax) {
name=name.toLowerCase$();
if (this.htNonbooleanParameterValues.containsKey$O(name)) {
var v=this.htNonbooleanParameterValues.get$O(name);
return $I$(8,"varClip$S$S$I",[name, $I$(9).e$O(v), nMax]);
}if (this.htBooleanParameterFlags.containsKey$O(name)) return this.htBooleanParameterFlags.get$O(name).toString();
if (this.htUserVariables.containsKey$O(name)) return this.htUserVariables.get$O(name).escape$();
if (this.htPropertyFlagsRemoved.containsKey$O(name)) return "false";
return "<not defined>";
});

Clazz.newMeth(C$, 'getParameter$S$Z', function (name, nullAsString) {
var v=this.getParam$S$Z(name, false);
return (v == null  && nullAsString  ? "" : v);
});

Clazz.newMeth(C$, 'getAndSetNewVariable$S$Z', function (name, doSet) {
if (name == null  || name.length$() == 0 ) name="x";
var v=this.getParam$S$Z(name, true);
return (v == null  && doSet  && name.charAt$I(0) != "_"  ? this.setUserVariable$S$org_jmol_script_SV(name, $I$(10).newV$I$O(4, "")) : $I$(10).getVariable$O(v));
});

Clazz.newMeth(C$, 'getParam$S$Z', function (name, asVariable) {
name=name.toLowerCase$();
if (name.equals$O("_memory")) {
var bTotal=0;
var bFree=0;

{}
var value=$I$(11).formatDecimal$F$I(bTotal - bFree, 1) + "/" + $I$(11).formatDecimal$F$I(bTotal, 1) ;
this.htNonbooleanParameterValues.put$O$O("_memory", value);
}if (this.htNonbooleanParameterValues.containsKey$O(name)) return this.htNonbooleanParameterValues.get$O(name);
if (this.htBooleanParameterFlags.containsKey$O(name)) return this.htBooleanParameterFlags.get$O(name);
if (this.htPropertyFlagsRemoved.containsKey$O(name)) return Boolean.FALSE;
if (this.htUserVariables.containsKey$O(name)) {
var v=this.htUserVariables.get$O(name);
return (asVariable ? v : $I$(10).oValue$O(v));
}return null;
});

Clazz.newMeth(C$, 'getVariableList$', function () {
return $I$(8).getVariableList$java_util_Map$I$Z$Z(this.htUserVariables, 0, true, false);
});

Clazz.newMeth(C$, 'setStructureList$FA$org_jmol_c_STR', function (list, type) {
this.haveSetStructureList=true;
this.structureList.put$O$O(type, list);
});

Clazz.newMeth(C$, 'getStructureList$', function () {
return this.structureList;
});

Clazz.newMeth(C$, 'doReportProperty$S', function (name) {
return (name.charAt$I(0) != "_" && C$.unreportedProperties.indexOf$S(";" + name + ";" ) < 0 );
}, 1);

Clazz.newMeth(C$, 'getAllVariables$', function () {
var map=Clazz.new_($I$(2,1));
map.putAll$java_util_Map(this.htBooleanParameterFlags);
map.putAll$java_util_Map(this.htNonbooleanParameterValues);
map.putAll$java_util_Map(this.htUserVariables);
return map;
});

Clazz.newMeth(C$, 'getLoadState$java_util_Map', function (htParams) {
var str=Clazz.new_($I$(12,1));
p$1.app$javajs_util_SB$S.apply(this, [str, "set allowEmbeddedScripts false"]);
if (this.allowEmbeddedScripts) this.setB$S$Z("allowEmbeddedScripts", true);
p$1.app$javajs_util_SB$S.apply(this, [str, "set appendNew " + this.appendNew]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set appletProxy " + $I$(13).esc$S(this.appletProxy)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set applySymmetryToBonds " + this.applySymmetryToBonds]);
if (this.atomTypes.length$() > 0) p$1.app$javajs_util_SB$S.apply(this, [str, "set atomTypes " + $I$(13).esc$S(this.atomTypes)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set autoBond " + this.autoBond]);
if (this.axesOrientationRasmol) p$1.app$javajs_util_SB$S.apply(this, [str, "set axesOrientationRasmol true"]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set bondRadiusMilliAngstroms " + this.bondRadiusMilliAngstroms]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set bondTolerance " + new Float(this.bondTolerance).toString()]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set defaultLattice " + $I$(9).eP$javajs_util_T3(this.ptDefaultLattice)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set defaultLoadFilter " + $I$(13).esc$S(this.defaultLoadFilter)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set defaultLoadScript \"\""]);
if (this.defaultLoadScript.length$() > 0) this.setO$S$O("defaultLoadScript", this.defaultLoadScript);
p$1.app$javajs_util_SB$S.apply(this, [str, "set defaultStructureDssp " + this.defaultStructureDSSP]);
var sMode=this.vwr.getDefaultVdwNameOrData$I$org_jmol_c_VDW$javajs_util_BS(-2147483648, null, null);
p$1.app$javajs_util_SB$S.apply(this, [str, "set defaultVDW " + sMode]);
if (sMode.equals$O("User")) p$1.app$javajs_util_SB$S.apply(this, [str, this.vwr.getDefaultVdwNameOrData$I$org_jmol_c_VDW$javajs_util_BS(2147483647, null, null)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set forceAutoBond " + this.forceAutoBond]);
p$1.app$javajs_util_SB$S.apply(this, [str, "#set defaultDirectory " + $I$(13).esc$S(this.defaultDirectory)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "#set loadFormat " + $I$(13).esc$S(this.loadFormat)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "#set loadLigandFormat " + $I$(13).esc$S(this.pdbLoadLigandFormat)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "#set smilesUrlFormat " + $I$(13).esc$S(this.smilesUrlFormat)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "#set nihResolverFormat " + $I$(13).esc$S(this.nihResolverFormat)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "#set pubChemFormat " + $I$(13).esc$S(this.pubChemFormat)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set bondingVersion " + this.bondingVersion]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set legacyAutoBonding " + this.legacyAutoBonding]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set legacyAutoBonding " + this.legacyAutoBonding]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set legacyHAddition " + this.legacyHAddition]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set legacyJavaFloat " + this.legacyJavaFloat]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set minBondDistance " + new Float(this.minBondDistance).toString()]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set minimizationCriterion  " + new Float(this.minimizationCriterion).toString()]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set minimizationSteps  " + this.minimizationSteps]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set multipleBondBananas false"]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set pdbAddHydrogens " + (htParams != null  && htParams.get$O("pdbNoHydrogens") !== Boolean.TRUE   ? this.pdbAddHydrogens : false)]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set pdbGetHeader " + this.pdbGetHeader]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set pdbSequential " + this.pdbSequential]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set percentVdwAtom " + this.percentVdwAtom]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set smallMoleculeMaxAtoms " + this.smallMoleculeMaxAtoms]);
p$1.app$javajs_util_SB$S.apply(this, [str, "set smartAromatic " + this.smartAromatic]);
if (this.zeroBasedXyzRasmol) p$1.app$javajs_util_SB$S.apply(this, [str, "set zeroBasedXyzRasmol true"]);
return str.toString();
});

Clazz.newMeth(C$, 'app$javajs_util_SB$S', function (s, cmd) {
if (cmd.length$() == 0) return;
s.append$S("  ").append$S(cmd).append$S(";\n");
}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.unreportedProperties=(";ambientpercent;animationfps;antialiasdisplay;antialiasimages;antialiastranslucent;appendnew;axescolor;axesposition;axesmolecular;axesorientationrasmol;axesunitcell;axeswindow;axis1color;axis2color;axis3color;backgroundcolor;backgroundmodel;bondsymmetryatoms;boundboxcolor;cameradepth;bondingversion;ciprule6full;contextdepthmax;debug;debugscript;defaultlatttice;defaults;defaultdropscript;diffusepercent;;exportdrivers;exportscale;_filecaching;_filecache;fontcaching;fontscaling;forcefield;language;hbondsDistanceMaximum;hbondsangleminimum;jmolinjspecview;legacyautobonding;legacyhaddition;legacyjavafloat;loglevel;logfile;loggestures;logcommands;measurestylechime;loadformat;loadligandformat;macrodirectory;mkaddhydrogens;minimizationmaxatoms;smilesurlformat;pubchemformat;nihresolverformat;edsurlformat;edsurlcutoff;multiprocessor;navigationmode;;nodelay;pathforallfiles;perspectivedepth;phongexponent;perspectivemodel;platformspeed;preservestate;refreshing;repaintwaitms;rotationradius;selectallmodels;showaxes;showaxis1;showaxis2;showaxis3;showboundbox;showfrank;showtiming;showunitcell;slabenabled;slab;slabrange;depth;zshade;zshadepower;specular;specularexponent;specularpercent;celshading;celshadingpower;specularpower;stateversion;statusreporting;stereo;stereostate;vibrationperiod;unitcellcolor;visualrange;windowcentered;zerobasedxyzrasmol;zoomenabled;mousedragfactor;mousewheelfactor;scriptqueue;scriptreportinglevel;syncscript;syncmouse;syncstereo;defaultdirectory;currentlocalpath;defaultdirectorylocal;ambient;bonds;colorrasmol;diffuse;fractionalrelative;frank;hetero;hidenotselected;hoverlabel;hydrogen;languagetranslation;measurementunits;navigationdepth;navigationslab;picking;pickingstyle;propertycolorschemeoverload;radius;rgbblue;rgbgreen;rgbred;scaleangstromsperinch;selectionhalos;showscript;showselections;solvent;strandcount;spinx;spiny;spinz;spinfps;navx;navy;navz;navfps;" + $I$(1).getNameList$() + ";undo;atompicking;drawpicking;bondpicking;pickspinrate;picklabel" + ";modelkitmode;autoplaymovie;allowaudio;allowgestures;allowkeystrokes;allowmultitouch;allowmodelkit" + ";dodrop;hovered;historylevel;imagestate;iskiosk;useminimizationthread" + ";showkeystrokes;saveproteinstructurestate;testflag1;testflag2;testflag3;testflag4" + ";selecthetero;selecthydrogen;" + ";" ).toLowerCase$();
};

Clazz.newMeth(C$);
})();
;Clazz.setTVer('3.2.9-v1');//Created 2020-06-01 14:49:53 Java2ScriptVisitor version 3.2.9-v1 net.sf.j2s.core.jar version 3.2.9-v1
