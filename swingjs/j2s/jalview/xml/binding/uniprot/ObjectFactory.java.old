//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.04.05 at 08:01:44 AM BST 
//

package jalview.xml.binding.uniprot;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the jalview.xml.binding.uniprot package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory
{

  private final static QName _Copyright_QNAME = new QName(
          "http://uniprot.org/uniprot", "copyright");

  /**
   * Create a new ObjectFactory that can be used to create new instances of
   * schema derived classes for package: jalview.xml.binding.uniprot
   * 
   */
  public ObjectFactory()
  {
  }

  /**
   * Create an instance of {@link SourceDataType }
   * 
   */
  public SourceDataType createSourceDataType()
  {
    return new SourceDataType();
  }

  /**
   * Create an instance of {@link IsoformType }
   * 
   */
  public IsoformType createIsoformType()
  {
    return new IsoformType();
  }

  /**
   * Create an instance of {@link CommentType }
   * 
   */
  public CommentType createCommentType()
  {
    return new CommentType();
  }

  /**
   * Create an instance of {@link CommentType.Conflict }
   * 
   */
  public CommentType.Conflict createCommentTypeConflict()
  {
    return new CommentType.Conflict();
  }

  /**
   * Create an instance of {@link OrganismType }
   * 
   */
  public OrganismType createOrganismType()
  {
    return new OrganismType();
  }

  /**
   * Create an instance of {@link ProteinType }
   * 
   */
  public ProteinType createProteinType()
  {
    return new ProteinType();
  }

  /**
   * Create an instance of {@link Entry }
   * 
   */
  public Entry createEntry()
  {
    return new Entry();
  }

  /**
   * Create an instance of {@link GeneType }
   * 
   */
  public GeneType createGeneType()
  {
    return new GeneType();
  }

  /**
   * Create an instance of {@link GeneLocationType }
   * 
   */
  public GeneLocationType createGeneLocationType()
  {
    return new GeneLocationType();
  }

  /**
   * Create an instance of {@link ReferenceType }
   * 
   */
  public ReferenceType createReferenceType()
  {
    return new ReferenceType();
  }

  /**
   * Create an instance of {@link DbReferenceType }
   * 
   */
  public DbReferenceType createDbReferenceType()
  {
    return new DbReferenceType();
  }

  /**
   * Create an instance of {@link ProteinExistenceType }
   * 
   */
  public ProteinExistenceType createProteinExistenceType()
  {
    return new ProteinExistenceType();
  }

  /**
   * Create an instance of {@link KeywordType }
   * 
   */
  public KeywordType createKeywordType()
  {
    return new KeywordType();
  }

  /**
   * Create an instance of {@link FeatureType }
   * 
   */
  public FeatureType createFeatureType()
  {
    return new FeatureType();
  }

  /**
   * Create an instance of {@link EvidenceType }
   * 
   */
  public EvidenceType createEvidenceType()
  {
    return new EvidenceType();
  }

  /**
   * Create an instance of {@link SequenceType }
   * 
   */
  public SequenceType createSequenceType()
  {
    return new SequenceType();
  }

  /**
   * Create an instance of {@link Uniprot }
   * 
   */
  public Uniprot createUniprot()
  {
    return new Uniprot();
  }

  /**
   * Create an instance of {@link StatusType }
   * 
   */
  public StatusType createStatusType()
  {
    return new StatusType();
  }

  /**
   * Create an instance of {@link PositionType }
   * 
   */
  public PositionType createPositionType()
  {
    return new PositionType();
  }

  /**
   * Create an instance of {@link ConsortiumType }
   * 
   */
  public ConsortiumType createConsortiumType()
  {
    return new ConsortiumType();
  }

  /**
   * Create an instance of {@link GeneNameType }
   * 
   */
  public GeneNameType createGeneNameType()
  {
    return new GeneNameType();
  }

  /**
   * Create an instance of {@link LocationType }
   * 
   */
  public LocationType createLocationType()
  {
    return new LocationType();
  }

  /**
   * Create an instance of {@link CitationType }
   * 
   */
  public CitationType createCitationType()
  {
    return new CitationType();
  }

  /**
   * Create an instance of {@link PropertyType }
   * 
   */
  public PropertyType createPropertyType()
  {
    return new PropertyType();
  }

  /**
   * Create an instance of {@link PhysiologicalReactionType }
   * 
   */
  public PhysiologicalReactionType createPhysiologicalReactionType()
  {
    return new PhysiologicalReactionType();
  }

  /**
   * Create an instance of {@link CofactorType }
   * 
   */
  public CofactorType createCofactorType()
  {
    return new CofactorType();
  }

  /**
   * Create an instance of {@link EvidencedStringType }
   * 
   */
  public EvidencedStringType createEvidencedStringType()
  {
    return new EvidencedStringType();
  }

  /**
   * Create an instance of {@link PersonType }
   * 
   */
  public PersonType createPersonType()
  {
    return new PersonType();
  }

  /**
   * Create an instance of {@link ImportedFromType }
   * 
   */
  public ImportedFromType createImportedFromType()
  {
    return new ImportedFromType();
  }

  /**
   * Create an instance of {@link EventType }
   * 
   */
  public EventType createEventType()
  {
    return new EventType();
  }

  /**
   * Create an instance of {@link InteractantType }
   * 
   */
  public InteractantType createInteractantType()
  {
    return new InteractantType();
  }

  /**
   * Create an instance of {@link NameListType }
   * 
   */
  public NameListType createNameListType()
  {
    return new NameListType();
  }

  /**
   * Create an instance of {@link ReactionType }
   * 
   */
  public ReactionType createReactionType()
  {
    return new ReactionType();
  }

  /**
   * Create an instance of {@link SourceType }
   * 
   */
  public SourceType createSourceType()
  {
    return new SourceType();
  }

  /**
   * Create an instance of {@link MoleculeType }
   * 
   */
  public MoleculeType createMoleculeType()
  {
    return new MoleculeType();
  }

  /**
   * Create an instance of {@link OrganismNameType }
   * 
   */
  public OrganismNameType createOrganismNameType()
  {
    return new OrganismNameType();
  }

  /**
   * Create an instance of {@link SubcellularLocationType }
   * 
   */
  public SubcellularLocationType createSubcellularLocationType()
  {
    return new SubcellularLocationType();
  }

  /**
   * Create an instance of {@link SourceDataType.Strain }
   * 
   */
  public SourceDataType.Strain createSourceDataTypeStrain()
  {
    return new SourceDataType.Strain();
  }

  /**
   * Create an instance of {@link SourceDataType.Plasmid }
   * 
   */
  public SourceDataType.Plasmid createSourceDataTypePlasmid()
  {
    return new SourceDataType.Plasmid();
  }

  /**
   * Create an instance of {@link SourceDataType.Transposon }
   * 
   */
  public SourceDataType.Transposon createSourceDataTypeTransposon()
  {
    return new SourceDataType.Transposon();
  }

  /**
   * Create an instance of {@link SourceDataType.Tissue }
   * 
   */
  public SourceDataType.Tissue createSourceDataTypeTissue()
  {
    return new SourceDataType.Tissue();
  }

  /**
   * Create an instance of {@link IsoformType.Name }
   * 
   */
  public IsoformType.Name createIsoformTypeName()
  {
    return new IsoformType.Name();
  }

  /**
   * Create an instance of {@link IsoformType.Sequence }
   * 
   */
  public IsoformType.Sequence createIsoformTypeSequence()
  {
    return new IsoformType.Sequence();
  }

  /**
   * Create an instance of {@link CommentType.Absorption }
   * 
   */
  public CommentType.Absorption createCommentTypeAbsorption()
  {
    return new CommentType.Absorption();
  }

  /**
   * Create an instance of {@link CommentType.Kinetics }
   * 
   */
  public CommentType.Kinetics createCommentTypeKinetics()
  {
    return new CommentType.Kinetics();
  }

  /**
   * Create an instance of {@link CommentType.PhDependence }
   * 
   */
  public CommentType.PhDependence createCommentTypePhDependence()
  {
    return new CommentType.PhDependence();
  }

  /**
   * Create an instance of {@link CommentType.RedoxPotential }
   * 
   */
  public CommentType.RedoxPotential createCommentTypeRedoxPotential()
  {
    return new CommentType.RedoxPotential();
  }

  /**
   * Create an instance of {@link CommentType.TemperatureDependence }
   * 
   */
  public CommentType.TemperatureDependence createCommentTypeTemperatureDependence()
  {
    return new CommentType.TemperatureDependence();
  }

  /**
   * Create an instance of {@link CommentType.Link }
   * 
   */
  public CommentType.Link createCommentTypeLink()
  {
    return new CommentType.Link();
  }

  /**
   * Create an instance of {@link CommentType.Disease }
   * 
   */
  public CommentType.Disease createCommentTypeDisease()
  {
    return new CommentType.Disease();
  }

  /**
   * Create an instance of {@link CommentType.Conflict.Sequence }
   * 
   */
  public CommentType.Conflict.Sequence createCommentTypeConflictSequence()
  {
    return new CommentType.Conflict.Sequence();
  }

  /**
   * Create an instance of {@link OrganismType.Lineage }
   * 
   */
  public OrganismType.Lineage createOrganismTypeLineage()
  {
    return new OrganismType.Lineage();
  }

  /**
   * Create an instance of {@link ProteinType.RecommendedName }
   * 
   */
  public ProteinType.RecommendedName createProteinTypeRecommendedName()
  {
    return new ProteinType.RecommendedName();
  }

  /**
   * Create an instance of {@link ProteinType.AlternativeName }
   * 
   */
  public ProteinType.AlternativeName createProteinTypeAlternativeName()
  {
    return new ProteinType.AlternativeName();
  }

  /**
   * Create an instance of {@link ProteinType.SubmittedName }
   * 
   */
  public ProteinType.SubmittedName createProteinTypeSubmittedName()
  {
    return new ProteinType.SubmittedName();
  }

  /**
   * Create an instance of {@link ProteinType.Domain }
   * 
   */
  public ProteinType.Domain createProteinTypeDomain()
  {
    return new ProteinType.Domain();
  }

  /**
   * Create an instance of {@link ProteinType.Component }
   * 
   */
  public ProteinType.Component createProteinTypeComponent()
  {
    return new ProteinType.Component();
  }

  /**
   * Create an instance of {@link JAXBElement }{@code <}{@link String
   * }{@code >}}
   * 
   */
  @XmlElementDecl(
    namespace = "http://uniprot.org/uniprot",
    name = "copyright")
  public JAXBElement<String> createCopyright(String value)
  {
    return new JAXBElement<String>(_Copyright_QNAME, String.class, null,
            value);
  }

}
